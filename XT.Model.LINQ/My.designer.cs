#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XT.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name= "apms.cocome.vn_official")]
	public partial class MyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertUser_Type(User_Type instance);
    partial void UpdateUser_Type(User_Type instance);
    partial void DeleteUser_Type(User_Type instance);
    partial void InsertBookOrder(BookOrder instance);
    partial void UpdateBookOrder(BookOrder instance);
    partial void DeleteBookOrder(BookOrder instance);
    partial void InsertBookOrder_Detail(BookOrder_Detail instance);
    partial void UpdateBookOrder_Detail(BookOrder_Detail instance);
    partial void DeleteBookOrder_Detail(BookOrder_Detail instance);
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertClass_Module(Class_Module instance);
    partial void UpdateClass_Module(Class_Module instance);
    partial void DeleteClass_Module(Class_Module instance);
    partial void InsertClass_Module_Day(Class_Module_Day instance);
    partial void UpdateClass_Module_Day(Class_Module_Day instance);
    partial void DeleteClass_Module_Day(Class_Module_Day instance);
    partial void InsertClass_Module_Day_Student(Class_Module_Day_Student instance);
    partial void UpdateClass_Module_Day_Student(Class_Module_Day_Student instance);
    partial void DeleteClass_Module_Day_Student(Class_Module_Day_Student instance);
    partial void InsertClass_Module_StudentExam(Class_Module_StudentExam instance);
    partial void UpdateClass_Module_StudentExam(Class_Module_StudentExam instance);
    partial void DeleteClass_Module_StudentExam(Class_Module_StudentExam instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCompany_Type(Company_Type instance);
    partial void UpdateCompany_Type(Company_Type instance);
    partial void DeleteCompany_Type(Company_Type instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertCourseFamily(CourseFamily instance);
    partial void UpdateCourseFamily(CourseFamily instance);
    partial void DeleteCourseFamily(CourseFamily instance);
    partial void InsertFaculty(Faculty instance);
    partial void UpdateFaculty(Faculty instance);
    partial void DeleteFaculty(Faculty instance);
    partial void InsertFaculty_Module(Faculty_Module instance);
    partial void UpdateFaculty_Module(Faculty_Module instance);
    partial void DeleteFaculty_Module(Faculty_Module instance);
    partial void InsertFeePlan(FeePlan instance);
    partial void UpdateFeePlan(FeePlan instance);
    partial void DeleteFeePlan(FeePlan instance);
    partial void InsertFeePlan_Detail(FeePlan_Detail instance);
    partial void UpdateFeePlan_Detail(FeePlan_Detail instance);
    partial void DeleteFeePlan_Detail(FeePlan_Detail instance);
    partial void InsertModule(Module instance);
    partial void UpdateModule(Module instance);
    partial void DeleteModule(Module instance);
    partial void InsertPrize(Prize instance);
    partial void UpdatePrize(Prize instance);
    partial void DeletePrize(Prize instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertRole_Type(Role_Type instance);
    partial void UpdateRole_Type(Role_Type instance);
    partial void DeleteRole_Type(Role_Type instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertStudent_AcademicStatus(Student_AcademicStatus instance);
    partial void UpdateStudent_AcademicStatus(Student_AcademicStatus instance);
    partial void DeleteStudent_AcademicStatus(Student_AcademicStatus instance);
    partial void InsertStudent_ClassHistory(Student_ClassHistory instance);
    partial void UpdateStudent_ClassHistory(Student_ClassHistory instance);
    partial void DeleteStudent_ClassHistory(Student_ClassHistory instance);
    partial void InsertStudent_FeePlan(Student_FeePlan instance);
    partial void UpdateStudent_FeePlan(Student_FeePlan instance);
    partial void DeleteStudent_FeePlan(Student_FeePlan instance);
    partial void InsertStudent_FeePlan_Installment(Student_FeePlan_Installment instance);
    partial void UpdateStudent_FeePlan_Installment(Student_FeePlan_Installment instance);
    partial void DeleteStudent_FeePlan_Installment(Student_FeePlan_Installment instance);
    partial void InsertUser_Company(User_Company instance);
    partial void UpdateUser_Company(User_Company instance);
    partial void DeleteUser_Company(User_Company instance);
    partial void InsertUser_Profile(User_Profile instance);
    partial void UpdateUser_Profile(User_Profile instance);
    partial void DeleteUser_Profile(User_Profile instance);
	partial void InsertTimekeeper(Timekeeper instance);
    partial void UpdateTimekeeper(Timekeeper instance);
    partial void DeleteTimekeeper(Timekeeper instance);
    #endregion
		
		public MyDataContext() : 
				base(global::XT.Model.Properties.Settings.Default.apms_cocome_vn_server_final_aahcmConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<User_Type> User_Types
		{
			get
			{
				return this.GetTable<User_Type>();
			}
		}
		
		public System.Data.Linq.Table<BookOrder> BookOrders
		{
			get
			{
				return this.GetTable<BookOrder>();
			}
		}
		
		public System.Data.Linq.Table<BookOrder_Detail> BookOrder_Details
		{
			get
			{
				return this.GetTable<BookOrder_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<Class_Module> Class_Modules
		{
			get
			{
				return this.GetTable<Class_Module>();
			}
		}
		
		public System.Data.Linq.Table<Class_Module_Day> Class_Module_Days
		{
			get
			{
				return this.GetTable<Class_Module_Day>();
			}
		}
		
		public System.Data.Linq.Table<Class_Module_Day_Student> Class_Module_Day_Students
		{
			get
			{
				return this.GetTable<Class_Module_Day_Student>();
			}
		}
		
		public System.Data.Linq.Table<Class_Module_StudentExam> Class_Module_StudentExams
		{
			get
			{
				return this.GetTable<Class_Module_StudentExam>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Company_Type> Company_Types
		{
			get
			{
				return this.GetTable<Company_Type>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<CourseFamily> CourseFamilies
		{
			get
			{
				return this.GetTable<CourseFamily>();
			}
		}
		
		public System.Data.Linq.Table<Faculty> Faculties
		{
			get
			{
				return this.GetTable<Faculty>();
			}
		}
		
		public System.Data.Linq.Table<Faculty_Module> Faculty_Modules
		{
			get
			{
				return this.GetTable<Faculty_Module>();
			}
		}
		
		public System.Data.Linq.Table<FeePlan> FeePlans
		{
			get
			{
				return this.GetTable<FeePlan>();
			}
		}
		
		public System.Data.Linq.Table<FeePlan_Detail> FeePlan_Details
		{
			get
			{
				return this.GetTable<FeePlan_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Module> Modules
		{
			get
			{
				return this.GetTable<Module>();
			}
		}
		
		public System.Data.Linq.Table<Prize> Prizes
		{
			get
			{
				return this.GetTable<Prize>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resources
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<Role_Type> Role_Types
		{
			get
			{
				return this.GetTable<Role_Type>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Student_AcademicStatus> Student_AcademicStatus
		{
			get
			{
				return this.GetTable<Student_AcademicStatus>();
			}
		}
		
		public System.Data.Linq.Table<Student_ClassHistory> Student_ClassHistories
		{
			get
			{
				return this.GetTable<Student_ClassHistory>();
			}
		}
		
		public System.Data.Linq.Table<Student_FeePlan> Student_FeePlans
		{
			get
			{
				return this.GetTable<Student_FeePlan>();
			}
		}
		
		public System.Data.Linq.Table<Student_FeePlan_Installment> Student_FeePlan_Installments
		{
			get
			{
				return this.GetTable<Student_FeePlan_Installment>();
			}
		}
		
		public System.Data.Linq.Table<User_Company> User_Companies
		{
			get
			{
				return this.GetTable<User_Company>();
			}
		}
		
		public System.Data.Linq.Table<User_Profile> User_Profiles
		{
			get
			{
				return this.GetTable<User_Profile>();
			}
		}
		public System.Data.Linq.Table<Timekeeper> Timekeepers
		{
			get
			{
				return this.GetTable<Timekeeper>();
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Account_Username;
		
		private string _Account_Password;
		
		private string _Account_Name;
		
		private string _Account_Avatar;
		
		private string _Account_Email;
		
		private bool _HasSetPassword;
		
		private int _User_Profile_Id;
		
		private string _Account_ActiveKey;
		
		private string _Account_RecoverPasswordKey;
		
		private System.Nullable<System.DateTime> _Account_RecoverPasswordExpired;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntityRef<User_Profile> _User_Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccount_UsernameChanging(string value);
    partial void OnAccount_UsernameChanged();
    partial void OnAccount_PasswordChanging(string value);
    partial void OnAccount_PasswordChanged();
    partial void OnAccount_NameChanging(string value);
    partial void OnAccount_NameChanged();
    partial void OnAccount_AvatarChanging(string value);
    partial void OnAccount_AvatarChanged();
    partial void OnAccount_EmailChanging(string value);
    partial void OnAccount_EmailChanged();
    partial void OnHasSetPasswordChanging(bool value);
    partial void OnHasSetPasswordChanged();
    partial void OnUser_Profile_IdChanging(int value);
    partial void OnUser_Profile_IdChanged();
    partial void OnAccount_ActiveKeyChanging(string value);
    partial void OnAccount_ActiveKeyChanged();
    partial void OnAccount_RecoverPasswordKeyChanging(string value);
    partial void OnAccount_RecoverPasswordKeyChanged();
    partial void OnAccount_RecoverPasswordExpiredChanging(System.Nullable<System.DateTime> value);
    partial void OnAccount_RecoverPasswordExpiredChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Account()
		{
			this._User_Profile = default(EntityRef<User_Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Username", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Account_Username
		{
			get
			{
				return this._Account_Username;
			}
			set
			{
				if ((this._Account_Username != value))
				{
					this.OnAccount_UsernameChanging(value);
					this.SendPropertyChanging();
					this._Account_Username = value;
					this.SendPropertyChanged("Account_Username");
					this.OnAccount_UsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Password", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Account_Password
		{
			get
			{
				return this._Account_Password;
			}
			set
			{
				if ((this._Account_Password != value))
				{
					this.OnAccount_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Account_Password = value;
					this.SendPropertyChanged("Account_Password");
					this.OnAccount_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Account_Name
		{
			get
			{
				return this._Account_Name;
			}
			set
			{
				if ((this._Account_Name != value))
				{
					this.OnAccount_NameChanging(value);
					this.SendPropertyChanging();
					this._Account_Name = value;
					this.SendPropertyChanged("Account_Name");
					this.OnAccount_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Avatar", DbType="NVarChar(100)")]
		public string Account_Avatar
		{
			get
			{
				return this._Account_Avatar;
			}
			set
			{
				if ((this._Account_Avatar != value))
				{
					this.OnAccount_AvatarChanging(value);
					this.SendPropertyChanging();
					this._Account_Avatar = value;
					this.SendPropertyChanged("Account_Avatar");
					this.OnAccount_AvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Account_Email
		{
			get
			{
				return this._Account_Email;
			}
			set
			{
				if ((this._Account_Email != value))
				{
					this.OnAccount_EmailChanging(value);
					this.SendPropertyChanging();
					this._Account_Email = value;
					this.SendPropertyChanged("Account_Email");
					this.OnAccount_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSetPassword", DbType="Bit NOT NULL")]
		public bool HasSetPassword
		{
			get
			{
				return this._HasSetPassword;
			}
			set
			{
				if ((this._HasSetPassword != value))
				{
					this.OnHasSetPasswordChanging(value);
					this.SendPropertyChanging();
					this._HasSetPassword = value;
					this.SendPropertyChanged("HasSetPassword");
					this.OnHasSetPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Profile_Id", DbType="Int NOT NULL")]
		public int User_Profile_Id
		{
			get
			{
				return this._User_Profile_Id;
			}
			set
			{
				if ((this._User_Profile_Id != value))
				{
					if (this._User_Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_Profile_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Profile_Id = value;
					this.SendPropertyChanged("User_Profile_Id");
					this.OnUser_Profile_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_ActiveKey", DbType="NVarChar(500)")]
		public string Account_ActiveKey
		{
			get
			{
				return this._Account_ActiveKey;
			}
			set
			{
				if ((this._Account_ActiveKey != value))
				{
					this.OnAccount_ActiveKeyChanging(value);
					this.SendPropertyChanging();
					this._Account_ActiveKey = value;
					this.SendPropertyChanged("Account_ActiveKey");
					this.OnAccount_ActiveKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_RecoverPasswordKey", DbType="VarChar(500)")]
		public string Account_RecoverPasswordKey
		{
			get
			{
				return this._Account_RecoverPasswordKey;
			}
			set
			{
				if ((this._Account_RecoverPasswordKey != value))
				{
					this.OnAccount_RecoverPasswordKeyChanging(value);
					this.SendPropertyChanging();
					this._Account_RecoverPasswordKey = value;
					this.SendPropertyChanged("Account_RecoverPasswordKey");
					this.OnAccount_RecoverPasswordKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_RecoverPasswordExpired", DbType="DateTime")]
		public System.Nullable<System.DateTime> Account_RecoverPasswordExpired
		{
			get
			{
				return this._Account_RecoverPasswordExpired;
			}
			set
			{
				if ((this._Account_RecoverPasswordExpired != value))
				{
					this.OnAccount_RecoverPasswordExpiredChanging(value);
					this.SendPropertyChanging();
					this._Account_RecoverPasswordExpired = value;
					this.SendPropertyChanged("Account_RecoverPasswordExpired");
					this.OnAccount_RecoverPasswordExpiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile_Account", Storage="_User_Profile", ThisKey="User_Profile_Id", OtherKey="Id", IsForeignKey=true)]
		public User_Profile User_Profile
		{
			get
			{
				return this._User_Profile.Entity;
			}
			set
			{
				User_Profile previousValue = this._User_Profile.Entity;
				if (((previousValue != value) 
							|| (this._User_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Profile.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._User_Profile.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._User_Profile_Id = value.Id;
					}
					else
					{
						this._User_Profile_Id = default(int);
					}
					this.SendPropertyChanged("User_Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Type")]
	public partial class User_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _User_Type_Name;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntitySet<User_Profile> _User_Profiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUser_Type_NameChanging(string value);
    partial void OnUser_Type_NameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public User_Type()
		{
			this._User_Profiles = new EntitySet<User_Profile>(new Action<User_Profile>(this.attach_User_Profiles), new Action<User_Profile>(this.detach_User_Profiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string User_Type_Name
		{
			get
			{
				return this._User_Type_Name;
			}
			set
			{
				if ((this._User_Type_Name != value))
				{
					this.OnUser_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Type_Name = value;
					this.SendPropertyChanged("User_Type_Name");
					this.OnUser_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Type_User_Profile", Storage="_User_Profiles", ThisKey="Id", OtherKey="User_Type_Id")]
		public EntitySet<User_Profile> User_Profiles
		{
			get
			{
				return this._User_Profiles;
			}
			set
			{
				this._User_Profiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Profiles(User_Profile entity)
		{
			this.SendPropertyChanging();
			entity.User_Type = this;
		}
		
		private void detach_User_Profiles(User_Profile entity)
		{
			this.SendPropertyChanging();
			entity.User_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookOrder")]
	public partial class BookOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Company_Id;
		
		private System.DateTime _Indent_Date;
		
		private int _Indent_Number;
		
		private string _Center;
		
		private int _Indent_Status;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private string _SAP_Customer_ID;
		
		private EntitySet<BookOrder_Detail> _BookOrder_Details;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompany_IdChanging(int value);
    partial void OnCompany_IdChanged();
    partial void OnIndent_DateChanging(System.DateTime value);
    partial void OnIndent_DateChanged();
    partial void OnIndent_NumberChanging(int value);
    partial void OnIndent_NumberChanged();
    partial void OnCenterChanging(string value);
    partial void OnCenterChanged();
    partial void OnIndent_StatusChanging(int value);
    partial void OnIndent_StatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnSAP_Customer_IDChanging(string value);
    partial void OnSAP_Customer_IDChanged();
    #endregion
		
		public BookOrder()
		{
			this._BookOrder_Details = new EntitySet<BookOrder_Detail>(new Action<BookOrder_Detail>(this.attach_BookOrder_Details), new Action<BookOrder_Detail>(this.detach_BookOrder_Details));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Id", DbType="Int NOT NULL")]
		public int Company_Id
		{
			get
			{
				return this._Company_Id;
			}
			set
			{
				if ((this._Company_Id != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompany_IdChanging(value);
					this.SendPropertyChanging();
					this._Company_Id = value;
					this.SendPropertyChanged("Company_Id");
					this.OnCompany_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indent_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Indent_Date
		{
			get
			{
				return this._Indent_Date;
			}
			set
			{
				if ((this._Indent_Date != value))
				{
					this.OnIndent_DateChanging(value);
					this.SendPropertyChanging();
					this._Indent_Date = value;
					this.SendPropertyChanged("Indent_Date");
					this.OnIndent_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indent_Number", DbType="Int NOT NULL")]
		public int Indent_Number
		{
			get
			{
				return this._Indent_Number;
			}
			set
			{
				if ((this._Indent_Number != value))
				{
					this.OnIndent_NumberChanging(value);
					this.SendPropertyChanging();
					this._Indent_Number = value;
					this.SendPropertyChanged("Indent_Number");
					this.OnIndent_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Center", DbType="NVarChar(MAX)")]
		public string Center
		{
			get
			{
				return this._Center;
			}
			set
			{
				if ((this._Center != value))
				{
					this.OnCenterChanging(value);
					this.SendPropertyChanging();
					this._Center = value;
					this.SendPropertyChanged("Center");
					this.OnCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indent_Status", DbType="Int NOT NULL")]
		public int Indent_Status
		{
			get
			{
				return this._Indent_Status;
			}
			set
			{
				if ((this._Indent_Status != value))
				{
					this.OnIndent_StatusChanging(value);
					this.SendPropertyChanging();
					this._Indent_Status = value;
					this.SendPropertyChanged("Indent_Status");
					this.OnIndent_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAP_Customer_ID", DbType="NVarChar(MAX)")]
		public string SAP_Customer_ID
		{
			get
			{
				return this._SAP_Customer_ID;
			}
			set
			{
				if ((this._SAP_Customer_ID != value))
				{
					this.OnSAP_Customer_IDChanging(value);
					this.SendPropertyChanging();
					this._SAP_Customer_ID = value;
					this.SendPropertyChanged("SAP_Customer_ID");
					this.OnSAP_Customer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookOrder_BookOrder_Detail", Storage="_BookOrder_Details", ThisKey="Id", OtherKey="BookOrder_Id")]
		public EntitySet<BookOrder_Detail> BookOrder_Details
		{
			get
			{
				return this._BookOrder_Details;
			}
			set
			{
				this._BookOrder_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_BookOrder", Storage="_Company", ThisKey="Company_Id", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.BookOrders.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.BookOrders.Add(this);
						this._Company_Id = value.Id;
					}
					else
					{
						this._Company_Id = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookOrder_Details(BookOrder_Detail entity)
		{
			this.SendPropertyChanging();
			entity.BookOrder = this;
		}
		
		private void detach_BookOrder_Details(BookOrder_Detail entity)
		{
			this.SendPropertyChanging();
			entity.BookOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookOrder_Detail")]
	public partial class BookOrder_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Student_Id;
		
		private int _BookOrder_Id;
		
		private int _Semester;
		
		private string _BookCode;
		
		private int _BookPrice;
		
		private System.DateTime _Created_Date;
		
		private EntityRef<BookOrder> _BookOrder;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    partial void OnBookOrder_IdChanging(int value);
    partial void OnBookOrder_IdChanged();
    partial void OnSemesterChanging(int value);
    partial void OnSemesterChanged();
    partial void OnBookCodeChanging(string value);
    partial void OnBookCodeChanged();
    partial void OnBookPriceChanging(int value);
    partial void OnBookPriceChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public BookOrder_Detail()
		{
			this._BookOrder = default(EntityRef<BookOrder>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int NOT NULL")]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookOrder_Id", DbType="Int NOT NULL")]
		public int BookOrder_Id
		{
			get
			{
				return this._BookOrder_Id;
			}
			set
			{
				if ((this._BookOrder_Id != value))
				{
					if (this._BookOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookOrder_IdChanging(value);
					this.SendPropertyChanging();
					this._BookOrder_Id = value;
					this.SendPropertyChanged("BookOrder_Id");
					this.OnBookOrder_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Int NOT NULL")]
		public int Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookCode", DbType="NVarChar(MAX)")]
		public string BookCode
		{
			get
			{
				return this._BookCode;
			}
			set
			{
				if ((this._BookCode != value))
				{
					this.OnBookCodeChanging(value);
					this.SendPropertyChanging();
					this._BookCode = value;
					this.SendPropertyChanged("BookCode");
					this.OnBookCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPrice", DbType="Int NOT NULL")]
		public int BookPrice
		{
			get
			{
				return this._BookPrice;
			}
			set
			{
				if ((this._BookPrice != value))
				{
					this.OnBookPriceChanging(value);
					this.SendPropertyChanging();
					this._BookPrice = value;
					this.SendPropertyChanged("BookPrice");
					this.OnBookPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookOrder_BookOrder_Detail", Storage="_BookOrder", ThisKey="BookOrder_Id", OtherKey="Id", IsForeignKey=true)]
		public BookOrder BookOrder
		{
			get
			{
				return this._BookOrder.Entity;
			}
			set
			{
				BookOrder previousValue = this._BookOrder.Entity;
				if (((previousValue != value) 
							|| (this._BookOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookOrder.Entity = null;
						previousValue.BookOrder_Details.Remove(this);
					}
					this._BookOrder.Entity = value;
					if ((value != null))
					{
						value.BookOrder_Details.Add(this);
						this._BookOrder_Id = value.Id;
					}
					else
					{
						this._BookOrder_Id = default(int);
					}
					this.SendPropertyChanged("BookOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_BookOrder_Detail", Storage="_Student", ThisKey="Student_Id", OtherKey="Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.BookOrder_Details.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.BookOrder_Details.Add(this);
						this._Student_Id = value.Id;
					}
					else
					{
						this._Student_Id = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Company_Id;
		
		private int _CourseFamily_Id;
		
		private string _Class_Name;
		
		private System.DateTime _Class_Admission_Date;
		
		private System.Nullable<System.DateTime> _Class_Completion_Date;
		
		private System.Nullable<System.DateTime> _Class_Graduation_Date;
		
		private int _Class_Day;
		
		private float _Class_Hour_Start;
		
		private float _Class_Hour_End;
		
		private int _Class_Studying_Status;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntitySet<Class_Module> _Class_Modules;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<Student_ClassHistory> _Student_ClassHistories;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<CourseFamily> _CourseFamily;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompany_IdChanging(int value);
    partial void OnCompany_IdChanged();
    partial void OnCourseFamily_IdChanging(int value);
    partial void OnCourseFamily_IdChanged();
    partial void OnClass_NameChanging(string value);
    partial void OnClass_NameChanged();
    partial void OnClass_Admission_DateChanging(System.DateTime value);
    partial void OnClass_Admission_DateChanged();
    partial void OnClass_Completion_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnClass_Completion_DateChanged();
    partial void OnClass_Graduation_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnClass_Graduation_DateChanged();
    partial void OnClass_DayChanging(int value);
    partial void OnClass_DayChanged();
    partial void OnClass_Hour_StartChanging(float value);
    partial void OnClass_Hour_StartChanged();
    partial void OnClass_Hour_EndChanging(float value);
    partial void OnClass_Hour_EndChanged();
    partial void OnClass_Studying_StatusChanging(int value);
    partial void OnClass_Studying_StatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Class()
		{
			this._Class_Modules = new EntitySet<Class_Module>(new Action<Class_Module>(this.attach_Class_Modules), new Action<Class_Module>(this.detach_Class_Modules));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Student_ClassHistories = new EntitySet<Student_ClassHistory>(new Action<Student_ClassHistory>(this.attach_Student_ClassHistories), new Action<Student_ClassHistory>(this.detach_Student_ClassHistories));
			this._Company = default(EntityRef<Company>);
			this._CourseFamily = default(EntityRef<CourseFamily>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Id", DbType="Int NOT NULL")]
		public int Company_Id
		{
			get
			{
				return this._Company_Id;
			}
			set
			{
				if ((this._Company_Id != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompany_IdChanging(value);
					this.SendPropertyChanging();
					this._Company_Id = value;
					this.SendPropertyChanged("Company_Id");
					this.OnCompany_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseFamily_Id", DbType="Int NOT NULL")]
		public int CourseFamily_Id
		{
			get
			{
				return this._CourseFamily_Id;
			}
			set
			{
				if ((this._CourseFamily_Id != value))
				{
					if (this._CourseFamily.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseFamily_IdChanging(value);
					this.SendPropertyChanging();
					this._CourseFamily_Id = value;
					this.SendPropertyChanged("CourseFamily_Id");
					this.OnCourseFamily_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Class_Name
		{
			get
			{
				return this._Class_Name;
			}
			set
			{
				if ((this._Class_Name != value))
				{
					this.OnClass_NameChanging(value);
					this.SendPropertyChanging();
					this._Class_Name = value;
					this.SendPropertyChanged("Class_Name");
					this.OnClass_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Admission_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Class_Admission_Date
		{
			get
			{
				return this._Class_Admission_Date;
			}
			set
			{
				if ((this._Class_Admission_Date != value))
				{
					this.OnClass_Admission_DateChanging(value);
					this.SendPropertyChanging();
					this._Class_Admission_Date = value;
					this.SendPropertyChanged("Class_Admission_Date");
					this.OnClass_Admission_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Completion_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Class_Completion_Date
		{
			get
			{
				return this._Class_Completion_Date;
			}
			set
			{
				if ((this._Class_Completion_Date != value))
				{
					this.OnClass_Completion_DateChanging(value);
					this.SendPropertyChanging();
					this._Class_Completion_Date = value;
					this.SendPropertyChanged("Class_Completion_Date");
					this.OnClass_Completion_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Graduation_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Class_Graduation_Date
		{
			get
			{
				return this._Class_Graduation_Date;
			}
			set
			{
				if ((this._Class_Graduation_Date != value))
				{
					this.OnClass_Graduation_DateChanging(value);
					this.SendPropertyChanging();
					this._Class_Graduation_Date = value;
					this.SendPropertyChanged("Class_Graduation_Date");
					this.OnClass_Graduation_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Day", DbType="Int NOT NULL")]
		public int Class_Day
		{
			get
			{
				return this._Class_Day;
			}
			set
			{
				if ((this._Class_Day != value))
				{
					this.OnClass_DayChanging(value);
					this.SendPropertyChanging();
					this._Class_Day = value;
					this.SendPropertyChanged("Class_Day");
					this.OnClass_DayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Hour_Start", DbType="Real NOT NULL")]
		public float Class_Hour_Start
		{
			get
			{
				return this._Class_Hour_Start;
			}
			set
			{
				if ((this._Class_Hour_Start != value))
				{
					this.OnClass_Hour_StartChanging(value);
					this.SendPropertyChanging();
					this._Class_Hour_Start = value;
					this.SendPropertyChanged("Class_Hour_Start");
					this.OnClass_Hour_StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Hour_End", DbType="Real NOT NULL")]
		public float Class_Hour_End
		{
			get
			{
				return this._Class_Hour_End;
			}
			set
			{
				if ((this._Class_Hour_End != value))
				{
					this.OnClass_Hour_EndChanging(value);
					this.SendPropertyChanging();
					this._Class_Hour_End = value;
					this.SendPropertyChanged("Class_Hour_End");
					this.OnClass_Hour_EndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Studying_Status", DbType="Int NOT NULL")]
		public int Class_Studying_Status
		{
			get
			{
				return this._Class_Studying_Status;
			}
			set
			{
				if ((this._Class_Studying_Status != value))
				{
					this.OnClass_Studying_StatusChanging(value);
					this.SendPropertyChanging();
					this._Class_Studying_Status = value;
					this.SendPropertyChanged("Class_Studying_Status");
					this.OnClass_Studying_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Class_Module", Storage="_Class_Modules", ThisKey="Id", OtherKey="Class_Id")]
		public EntitySet<Class_Module> Class_Modules
		{
			get
			{
				return this._Class_Modules;
			}
			set
			{
				this._Class_Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Student", Storage="_Students", ThisKey="Id", OtherKey="Class_Id")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Student_ClassHistory", Storage="_Student_ClassHistories", ThisKey="Id", OtherKey="Class_Id")]
		public EntitySet<Student_ClassHistory> Student_ClassHistories
		{
			get
			{
				return this._Student_ClassHistories;
			}
			set
			{
				this._Student_ClassHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Class", Storage="_Company", ThisKey="Company_Id", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._Company_Id = value.Id;
					}
					else
					{
						this._Company_Id = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseFamily_Class", Storage="_CourseFamily", ThisKey="CourseFamily_Id", OtherKey="Id", IsForeignKey=true)]
		public CourseFamily CourseFamily
		{
			get
			{
				return this._CourseFamily.Entity;
			}
			set
			{
				CourseFamily previousValue = this._CourseFamily.Entity;
				if (((previousValue != value) 
							|| (this._CourseFamily.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseFamily.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._CourseFamily.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._CourseFamily_Id = value.Id;
					}
					else
					{
						this._CourseFamily_Id = default(int);
					}
					this.SendPropertyChanged("CourseFamily");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Class_Modules(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_Class_Modules(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_Student_ClassHistories(Student_ClassHistory entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_Student_ClassHistories(Student_ClassHistory entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class_Module")]
	public partial class Class_Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Class_Id;
		
		private int _Module_Id;
		
		private int _Faculty_Id;
		
		private int _Resource_LT_Id;
		
		private int _Resource_TH_Id;
		
		private int _Resource_Exam_Id;
		
		private string _Class_Module_Name;
		
		private System.DateTime _Class_Module_Date_Start;
		
		private System.DateTime _Class_Module_Date_End;
		
		private System.DateTime _Class_Module_Date_Exam;
		
		private float _Class_Module_Hour_Start;
		
		private float _Class_Module_Hour_End;
		
		private int _Class_Module_DurationByDay;
		
		private string _Class_Module_Note;
		
		private string _Class_Module_RenderColor;
		
		private int _Class_Module_Status;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private int _Class_Module_Day;
		
		private EntitySet<Class_Module_Day> _Class_Module_Days;
		
		private EntitySet<Class_Module_StudentExam> _Class_Module_StudentExams;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Faculty> _Faculty;
		
		private EntityRef<Module> _Module;
		
		private EntityRef<Resource> _Resource;
		
		private EntityRef<Resource> _Resource1;
		
		private EntityRef<Resource> _Resource2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClass_IdChanging(System.Nullable<int> value);
    partial void OnClass_IdChanged();
    partial void OnModule_IdChanging(int value);
    partial void OnModule_IdChanged();
    partial void OnFaculty_IdChanging(int value);
    partial void OnFaculty_IdChanged();
    partial void OnResource_LT_IdChanging(int value);
    partial void OnResource_LT_IdChanged();
    partial void OnResource_TH_IdChanging(int value);
    partial void OnResource_TH_IdChanged();
    partial void OnResource_Exam_IdChanging(int value);
    partial void OnResource_Exam_IdChanged();
    partial void OnClass_Module_NameChanging(string value);
    partial void OnClass_Module_NameChanged();
    partial void OnClass_Module_Date_StartChanging(System.DateTime value);
    partial void OnClass_Module_Date_StartChanged();
    partial void OnClass_Module_Date_EndChanging(System.DateTime value);
    partial void OnClass_Module_Date_EndChanged();
    partial void OnClass_Module_Date_ExamChanging(System.DateTime value);
    partial void OnClass_Module_Date_ExamChanged();
    partial void OnClass_Module_Hour_StartChanging(float value);
    partial void OnClass_Module_Hour_StartChanged();
    partial void OnClass_Module_Hour_EndChanging(float value);
    partial void OnClass_Module_Hour_EndChanged();
    partial void OnClass_Module_DurationByDayChanging(int value);
    partial void OnClass_Module_DurationByDayChanged();
    partial void OnClass_Module_NoteChanging(string value);
    partial void OnClass_Module_NoteChanged();
    partial void OnClass_Module_RenderColorChanging(string value);
    partial void OnClass_Module_RenderColorChanged();
    partial void OnClass_Module_StatusChanging(int value);
    partial void OnClass_Module_StatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnClass_Module_DayChanging(int value);
    partial void OnClass_Module_DayChanged();
    #endregion
		
		public Class_Module()
		{
			this._Class_Module_Days = new EntitySet<Class_Module_Day>(new Action<Class_Module_Day>(this.attach_Class_Module_Days), new Action<Class_Module_Day>(this.detach_Class_Module_Days));
			this._Class_Module_StudentExams = new EntitySet<Class_Module_StudentExam>(new Action<Class_Module_StudentExam>(this.attach_Class_Module_StudentExams), new Action<Class_Module_StudentExam>(this.detach_Class_Module_StudentExams));
			this._Class = default(EntityRef<Class>);
			this._Faculty = default(EntityRef<Faculty>);
			this._Module = default(EntityRef<Module>);
			this._Resource = default(EntityRef<Resource>);
			this._Resource1 = default(EntityRef<Resource>);
			this._Resource2 = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Id", DbType="Int")]
		public System.Nullable<int> Class_Id
		{
			get
			{
				return this._Class_Id;
			}
			set
			{
				if ((this._Class_Id != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClass_IdChanging(value);
					this.SendPropertyChanging();
					this._Class_Id = value;
					this.SendPropertyChanged("Class_Id");
					this.OnClass_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Id", DbType="Int NOT NULL")]
		public int Module_Id
		{
			get
			{
				return this._Module_Id;
			}
			set
			{
				if ((this._Module_Id != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModule_IdChanging(value);
					this.SendPropertyChanging();
					this._Module_Id = value;
					this.SendPropertyChanged("Module_Id");
					this.OnModule_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Faculty_Id", DbType="Int NOT NULL")]
		public int Faculty_Id
		{
			get
			{
				return this._Faculty_Id;
			}
			set
			{
				if ((this._Faculty_Id != value))
				{
					if (this._Faculty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFaculty_IdChanging(value);
					this.SendPropertyChanging();
					this._Faculty_Id = value;
					this.SendPropertyChanged("Faculty_Id");
					this.OnFaculty_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_LT_Id", DbType="Int NOT NULL")]
		public int Resource_LT_Id
		{
			get
			{
				return this._Resource_LT_Id;
			}
			set
			{
				if ((this._Resource_LT_Id != value))
				{
					if (this._Resource1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResource_LT_IdChanging(value);
					this.SendPropertyChanging();
					this._Resource_LT_Id = value;
					this.SendPropertyChanged("Resource_LT_Id");
					this.OnResource_LT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_TH_Id", DbType="Int NOT NULL")]
		public int Resource_TH_Id
		{
			get
			{
				return this._Resource_TH_Id;
			}
			set
			{
				if ((this._Resource_TH_Id != value))
				{
					if (this._Resource2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResource_TH_IdChanging(value);
					this.SendPropertyChanging();
					this._Resource_TH_Id = value;
					this.SendPropertyChanged("Resource_TH_Id");
					this.OnResource_TH_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_Exam_Id", DbType="Int NOT NULL")]
		public int Resource_Exam_Id
		{
			get
			{
				return this._Resource_Exam_Id;
			}
			set
			{
				if ((this._Resource_Exam_Id != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResource_Exam_IdChanging(value);
					this.SendPropertyChanging();
					this._Resource_Exam_Id = value;
					this.SendPropertyChanged("Resource_Exam_Id");
					this.OnResource_Exam_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Name", DbType="NVarChar(MAX)")]
		public string Class_Module_Name
		{
			get
			{
				return this._Class_Module_Name;
			}
			set
			{
				if ((this._Class_Module_Name != value))
				{
					this.OnClass_Module_NameChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Name = value;
					this.SendPropertyChanged("Class_Module_Name");
					this.OnClass_Module_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Date_Start", DbType="DateTime NOT NULL")]
		public System.DateTime Class_Module_Date_Start
		{
			get
			{
				return this._Class_Module_Date_Start;
			}
			set
			{
				if ((this._Class_Module_Date_Start != value))
				{
					this.OnClass_Module_Date_StartChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Date_Start = value;
					this.SendPropertyChanged("Class_Module_Date_Start");
					this.OnClass_Module_Date_StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Date_End", DbType="DateTime NOT NULL")]
		public System.DateTime Class_Module_Date_End
		{
			get
			{
				return this._Class_Module_Date_End;
			}
			set
			{
				if ((this._Class_Module_Date_End != value))
				{
					this.OnClass_Module_Date_EndChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Date_End = value;
					this.SendPropertyChanged("Class_Module_Date_End");
					this.OnClass_Module_Date_EndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Date_Exam", DbType="DateTime NOT NULL")]
		public System.DateTime Class_Module_Date_Exam
		{
			get
			{
				return this._Class_Module_Date_Exam;
			}
			set
			{
				if ((this._Class_Module_Date_Exam != value))
				{
					this.OnClass_Module_Date_ExamChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Date_Exam = value;
					this.SendPropertyChanged("Class_Module_Date_Exam");
					this.OnClass_Module_Date_ExamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Hour_Start", DbType="Real NOT NULL")]
		public float Class_Module_Hour_Start
		{
			get
			{
				return this._Class_Module_Hour_Start;
			}
			set
			{
				if ((this._Class_Module_Hour_Start != value))
				{
					this.OnClass_Module_Hour_StartChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Hour_Start = value;
					this.SendPropertyChanged("Class_Module_Hour_Start");
					this.OnClass_Module_Hour_StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Hour_End", DbType="Real NOT NULL")]
		public float Class_Module_Hour_End
		{
			get
			{
				return this._Class_Module_Hour_End;
			}
			set
			{
				if ((this._Class_Module_Hour_End != value))
				{
					this.OnClass_Module_Hour_EndChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Hour_End = value;
					this.SendPropertyChanged("Class_Module_Hour_End");
					this.OnClass_Module_Hour_EndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_DurationByDay", DbType="Int NOT NULL")]
		public int Class_Module_DurationByDay
		{
			get
			{
				return this._Class_Module_DurationByDay;
			}
			set
			{
				if ((this._Class_Module_DurationByDay != value))
				{
					this.OnClass_Module_DurationByDayChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_DurationByDay = value;
					this.SendPropertyChanged("Class_Module_DurationByDay");
					this.OnClass_Module_DurationByDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Note", DbType="NVarChar(MAX)")]
		public string Class_Module_Note
		{
			get
			{
				return this._Class_Module_Note;
			}
			set
			{
				if ((this._Class_Module_Note != value))
				{
					this.OnClass_Module_NoteChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Note = value;
					this.SendPropertyChanged("Class_Module_Note");
					this.OnClass_Module_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_RenderColor", DbType="NVarChar(MAX)")]
		public string Class_Module_RenderColor
		{
			get
			{
				return this._Class_Module_RenderColor;
			}
			set
			{
				if ((this._Class_Module_RenderColor != value))
				{
					this.OnClass_Module_RenderColorChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_RenderColor = value;
					this.SendPropertyChanged("Class_Module_RenderColor");
					this.OnClass_Module_RenderColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Status", DbType="Int NOT NULL")]
		public int Class_Module_Status
		{
			get
			{
				return this._Class_Module_Status;
			}
			set
			{
				if ((this._Class_Module_Status != value))
				{
					this.OnClass_Module_StatusChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Status = value;
					this.SendPropertyChanged("Class_Module_Status");
					this.OnClass_Module_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Day", DbType="Int NOT NULL")]
		public int Class_Module_Day
		{
			get
			{
				return this._Class_Module_Day;
			}
			set
			{
				if ((this._Class_Module_Day != value))
				{
					this.OnClass_Module_DayChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Day = value;
					this.SendPropertyChanged("Class_Module_Day");
					this.OnClass_Module_DayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Module_Class_Module_Day", Storage="_Class_Module_Days", ThisKey="Id", OtherKey="Class_Module_Id")]
		public EntitySet<Class_Module_Day> Class_Module_Days
		{
			get
			{
				return this._Class_Module_Days;
			}
			set
			{
				this._Class_Module_Days.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Module_Class_Module_StudentExam", Storage="_Class_Module_StudentExams", ThisKey="Id", OtherKey="Class_Module_Id")]
		public EntitySet<Class_Module_StudentExam> Class_Module_StudentExams
		{
			get
			{
				return this._Class_Module_StudentExams;
			}
			set
			{
				this._Class_Module_StudentExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Class_Module", Storage="_Class", ThisKey="Class_Id", OtherKey="Id", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.Class_Modules.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.Class_Modules.Add(this);
						this._Class_Id = value.Id;
					}
					else
					{
						this._Class_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Class_Module", Storage="_Faculty", ThisKey="Faculty_Id", OtherKey="Id", IsForeignKey=true)]
		public Faculty Faculty
		{
			get
			{
				return this._Faculty.Entity;
			}
			set
			{
				Faculty previousValue = this._Faculty.Entity;
				if (((previousValue != value) 
							|| (this._Faculty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faculty.Entity = null;
						previousValue.Class_Modules.Remove(this);
					}
					this._Faculty.Entity = value;
					if ((value != null))
					{
						value.Class_Modules.Add(this);
						this._Faculty_Id = value.Id;
					}
					else
					{
						this._Faculty_Id = default(int);
					}
					this.SendPropertyChanged("Faculty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_Class_Module", Storage="_Module", ThisKey="Module_Id", OtherKey="Id", IsForeignKey=true)]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.Class_Modules.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.Class_Modules.Add(this);
						this._Module_Id = value.Id;
					}
					else
					{
						this._Module_Id = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Class_Module", Storage="_Resource", ThisKey="Resource_Exam_Id", OtherKey="Id", IsForeignKey=true)]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.Class_Modules.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.Class_Modules.Add(this);
						this._Resource_Exam_Id = value.Id;
					}
					else
					{
						this._Resource_Exam_Id = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Class_Module1", Storage="_Resource1", ThisKey="Resource_LT_Id", OtherKey="Id", IsForeignKey=true)]
		public Resource Resource1
		{
			get
			{
				return this._Resource1.Entity;
			}
			set
			{
				Resource previousValue = this._Resource1.Entity;
				if (((previousValue != value) 
							|| (this._Resource1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource1.Entity = null;
						previousValue.Class_Modules1.Remove(this);
					}
					this._Resource1.Entity = value;
					if ((value != null))
					{
						value.Class_Modules1.Add(this);
						this._Resource_LT_Id = value.Id;
					}
					else
					{
						this._Resource_LT_Id = default(int);
					}
					this.SendPropertyChanged("Resource1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Class_Module2", Storage="_Resource2", ThisKey="Resource_TH_Id", OtherKey="Id", IsForeignKey=true)]
		public Resource Resource2
		{
			get
			{
				return this._Resource2.Entity;
			}
			set
			{
				Resource previousValue = this._Resource2.Entity;
				if (((previousValue != value) 
							|| (this._Resource2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource2.Entity = null;
						previousValue.Class_Modules2.Remove(this);
					}
					this._Resource2.Entity = value;
					if ((value != null))
					{
						value.Class_Modules2.Add(this);
						this._Resource_TH_Id = value.Id;
					}
					else
					{
						this._Resource_TH_Id = default(int);
					}
					this.SendPropertyChanged("Resource2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Class_Module_Days(Class_Module_Day entity)
		{
			this.SendPropertyChanging();
			entity.Class_Module = this;
		}
		
		private void detach_Class_Module_Days(Class_Module_Day entity)
		{
			this.SendPropertyChanging();
			entity.Class_Module = null;
		}
		
		private void attach_Class_Module_StudentExams(Class_Module_StudentExam entity)
		{
			this.SendPropertyChanging();
			entity.Class_Module = this;
		}
		
		private void detach_Class_Module_StudentExams(Class_Module_StudentExam entity)
		{
			this.SendPropertyChanging();
			entity.Class_Module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class_Module_Day")]
	public partial class Class_Module_Day : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Class_Module_Id;
		
		private System.DateTime _Class_Module_Day_Date;
		
		private int _Class_Module_Day_Status;
		
		private string _Class_Module_Day_Note;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntitySet<Class_Module_Day_Student> _Class_Module_Day_Students;
		
		private EntityRef<Class_Module> _Class_Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClass_Module_IdChanging(int value);
    partial void OnClass_Module_IdChanged();
    partial void OnClass_Module_Day_DateChanging(System.DateTime value);
    partial void OnClass_Module_Day_DateChanged();
    partial void OnClass_Module_Day_StatusChanging(int value);
    partial void OnClass_Module_Day_StatusChanged();
    partial void OnClass_Module_Day_NoteChanging(string value);
    partial void OnClass_Module_Day_NoteChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Class_Module_Day()
		{
			this._Class_Module_Day_Students = new EntitySet<Class_Module_Day_Student>(new Action<Class_Module_Day_Student>(this.attach_Class_Module_Day_Students), new Action<Class_Module_Day_Student>(this.detach_Class_Module_Day_Students));
			this._Class_Module = default(EntityRef<Class_Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Id", DbType="Int NOT NULL")]
		public int Class_Module_Id
		{
			get
			{
				return this._Class_Module_Id;
			}
			set
			{
				if ((this._Class_Module_Id != value))
				{
					if (this._Class_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClass_Module_IdChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Id = value;
					this.SendPropertyChanged("Class_Module_Id");
					this.OnClass_Module_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Day_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Class_Module_Day_Date
		{
			get
			{
				return this._Class_Module_Day_Date;
			}
			set
			{
				if ((this._Class_Module_Day_Date != value))
				{
					this.OnClass_Module_Day_DateChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Day_Date = value;
					this.SendPropertyChanged("Class_Module_Day_Date");
					this.OnClass_Module_Day_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Day_Status", DbType="Int NOT NULL")]
		public int Class_Module_Day_Status
		{
			get
			{
				return this._Class_Module_Day_Status;
			}
			set
			{
				if ((this._Class_Module_Day_Status != value))
				{
					this.OnClass_Module_Day_StatusChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Day_Status = value;
					this.SendPropertyChanged("Class_Module_Day_Status");
					this.OnClass_Module_Day_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Day_Note", DbType="NVarChar(MAX)")]
		public string Class_Module_Day_Note
		{
			get
			{
				return this._Class_Module_Day_Note;
			}
			set
			{
				if ((this._Class_Module_Day_Note != value))
				{
					this.OnClass_Module_Day_NoteChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Day_Note = value;
					this.SendPropertyChanged("Class_Module_Day_Note");
					this.OnClass_Module_Day_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Module_Day_Class_Module_Day_Student", Storage="_Class_Module_Day_Students", ThisKey="Id", OtherKey="Class_Module_Day_Id")]
		public EntitySet<Class_Module_Day_Student> Class_Module_Day_Students
		{
			get
			{
				return this._Class_Module_Day_Students;
			}
			set
			{
				this._Class_Module_Day_Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Module_Class_Module_Day", Storage="_Class_Module", ThisKey="Class_Module_Id", OtherKey="Id", IsForeignKey=true)]
		public Class_Module Class_Module
		{
			get
			{
				return this._Class_Module.Entity;
			}
			set
			{
				Class_Module previousValue = this._Class_Module.Entity;
				if (((previousValue != value) 
							|| (this._Class_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Module.Entity = null;
						previousValue.Class_Module_Days.Remove(this);
					}
					this._Class_Module.Entity = value;
					if ((value != null))
					{
						value.Class_Module_Days.Add(this);
						this._Class_Module_Id = value.Id;
					}
					else
					{
						this._Class_Module_Id = default(int);
					}
					this.SendPropertyChanged("Class_Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Class_Module_Day_Students(Class_Module_Day_Student entity)
		{
			this.SendPropertyChanging();
			entity.Class_Module_Day = this;
		}
		
		private void detach_Class_Module_Day_Students(Class_Module_Day_Student entity)
		{
			this.SendPropertyChanging();
			entity.Class_Module_Day = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class_Module_Day_Student")]
	public partial class Class_Module_Day_Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Student_Id;
		
		private int _Class_Module_Day_Id;
		
		private int _Attendance_Status;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private string _Attendance_Note;
		
		private EntityRef<Class_Module_Day> _Class_Module_Day;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    partial void OnClass_Module_Day_IdChanging(int value);
    partial void OnClass_Module_Day_IdChanged();
    partial void OnAttendance_StatusChanging(int value);
    partial void OnAttendance_StatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnAttendance_NoteChanging(string value);
    partial void OnAttendance_NoteChanged();
    #endregion
		
		public Class_Module_Day_Student()
		{
			this._Class_Module_Day = default(EntityRef<Class_Module_Day>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int NOT NULL")]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Day_Id", DbType="Int NOT NULL")]
		public int Class_Module_Day_Id
		{
			get
			{
				return this._Class_Module_Day_Id;
			}
			set
			{
				if ((this._Class_Module_Day_Id != value))
				{
					if (this._Class_Module_Day.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClass_Module_Day_IdChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Day_Id = value;
					this.SendPropertyChanged("Class_Module_Day_Id");
					this.OnClass_Module_Day_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendance_Status", DbType="Int NOT NULL")]
		public int Attendance_Status
		{
			get
			{
				return this._Attendance_Status;
			}
			set
			{
				if ((this._Attendance_Status != value))
				{
					this.OnAttendance_StatusChanging(value);
					this.SendPropertyChanging();
					this._Attendance_Status = value;
					this.SendPropertyChanged("Attendance_Status");
					this.OnAttendance_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendance_Note", DbType="NVarChar(MAX)")]
		public string Attendance_Note
		{
			get
			{
				return this._Attendance_Note;
			}
			set
			{
				if ((this._Attendance_Note != value))
				{
					this.OnAttendance_NoteChanging(value);
					this.SendPropertyChanging();
					this._Attendance_Note = value;
					this.SendPropertyChanged("Attendance_Note");
					this.OnAttendance_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Module_Day_Class_Module_Day_Student", Storage="_Class_Module_Day", ThisKey="Class_Module_Day_Id", OtherKey="Id", IsForeignKey=true)]
		public Class_Module_Day Class_Module_Day
		{
			get
			{
				return this._Class_Module_Day.Entity;
			}
			set
			{
				Class_Module_Day previousValue = this._Class_Module_Day.Entity;
				if (((previousValue != value) 
							|| (this._Class_Module_Day.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Module_Day.Entity = null;
						previousValue.Class_Module_Day_Students.Remove(this);
					}
					this._Class_Module_Day.Entity = value;
					if ((value != null))
					{
						value.Class_Module_Day_Students.Add(this);
						this._Class_Module_Day_Id = value.Id;
					}
					else
					{
						this._Class_Module_Day_Id = default(int);
					}
					this.SendPropertyChanged("Class_Module_Day");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Class_Module_Day_Student", Storage="_Student", ThisKey="Student_Id", OtherKey="Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Class_Module_Day_Students.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Class_Module_Day_Students.Add(this);
						this._Student_Id = value.Id;
					}
					else
					{
						this._Student_Id = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class_Module_StudentExam")]
	public partial class Class_Module_StudentExam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Student_Id;
		
		private int _Class_Module_Id;
		
		private int _Student_Status;
		
		private float _Mark_LT;
		
		private float _Mark_TH;
		
		private float _Mark_LT_Percentage;
		
		private float _Mark_TH_Percentage;
		
		private int _Exam_Count;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntitySet<Prize> _Prizes;
		
		private EntityRef<Class_Module> _Class_Module;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    partial void OnClass_Module_IdChanging(int value);
    partial void OnClass_Module_IdChanged();
    partial void OnStudent_StatusChanging(int value);
    partial void OnStudent_StatusChanged();
    partial void OnMark_LTChanging(float value);
    partial void OnMark_LTChanged();
    partial void OnMark_THChanging(float value);
    partial void OnMark_THChanged();
    partial void OnMark_LT_PercentageChanging(float value);
    partial void OnMark_LT_PercentageChanged();
    partial void OnMark_TH_PercentageChanging(float value);
    partial void OnMark_TH_PercentageChanged();
    partial void OnExam_CountChanging(int value);
    partial void OnExam_CountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Class_Module_StudentExam()
		{
			this._Prizes = new EntitySet<Prize>(new Action<Prize>(this.attach_Prizes), new Action<Prize>(this.detach_Prizes));
			this._Class_Module = default(EntityRef<Class_Module>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int NOT NULL")]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Module_Id", DbType="Int NOT NULL")]
		public int Class_Module_Id
		{
			get
			{
				return this._Class_Module_Id;
			}
			set
			{
				if ((this._Class_Module_Id != value))
				{
					if (this._Class_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClass_Module_IdChanging(value);
					this.SendPropertyChanging();
					this._Class_Module_Id = value;
					this.SendPropertyChanged("Class_Module_Id");
					this.OnClass_Module_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Status", DbType="Int NOT NULL")]
		public int Student_Status
		{
			get
			{
				return this._Student_Status;
			}
			set
			{
				if ((this._Student_Status != value))
				{
					this.OnStudent_StatusChanging(value);
					this.SendPropertyChanging();
					this._Student_Status = value;
					this.SendPropertyChanged("Student_Status");
					this.OnStudent_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark_LT", DbType="Real NOT NULL")]
		public float Mark_LT
		{
			get
			{
				return this._Mark_LT;
			}
			set
			{
				if ((this._Mark_LT != value))
				{
					this.OnMark_LTChanging(value);
					this.SendPropertyChanging();
					this._Mark_LT = value;
					this.SendPropertyChanged("Mark_LT");
					this.OnMark_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark_TH", DbType="Real NOT NULL")]
		public float Mark_TH
		{
			get
			{
				return this._Mark_TH;
			}
			set
			{
				if ((this._Mark_TH != value))
				{
					this.OnMark_THChanging(value);
					this.SendPropertyChanging();
					this._Mark_TH = value;
					this.SendPropertyChanged("Mark_TH");
					this.OnMark_THChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark_LT_Percentage", DbType="Real NOT NULL")]
		public float Mark_LT_Percentage
		{
			get
			{
				return this._Mark_LT_Percentage;
			}
			set
			{
				if ((this._Mark_LT_Percentage != value))
				{
					this.OnMark_LT_PercentageChanging(value);
					this.SendPropertyChanging();
					this._Mark_LT_Percentage = value;
					this.SendPropertyChanged("Mark_LT_Percentage");
					this.OnMark_LT_PercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark_TH_Percentage", DbType="Real NOT NULL")]
		public float Mark_TH_Percentage
		{
			get
			{
				return this._Mark_TH_Percentage;
			}
			set
			{
				if ((this._Mark_TH_Percentage != value))
				{
					this.OnMark_TH_PercentageChanging(value);
					this.SendPropertyChanging();
					this._Mark_TH_Percentage = value;
					this.SendPropertyChanged("Mark_TH_Percentage");
					this.OnMark_TH_PercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_Count", DbType="Int NOT NULL")]
		public int Exam_Count
		{
			get
			{
				return this._Exam_Count;
			}
			set
			{
				if ((this._Exam_Count != value))
				{
					this.OnExam_CountChanging(value);
					this.SendPropertyChanging();
					this._Exam_Count = value;
					this.SendPropertyChanged("Exam_Count");
					this.OnExam_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Module_StudentExam_Prize", Storage="_Prizes", ThisKey="Id", OtherKey="Exam_Id")]
		public EntitySet<Prize> Prizes
		{
			get
			{
				return this._Prizes;
			}
			set
			{
				this._Prizes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Module_Class_Module_StudentExam", Storage="_Class_Module", ThisKey="Class_Module_Id", OtherKey="Id", IsForeignKey=true)]
		public Class_Module Class_Module
		{
			get
			{
				return this._Class_Module.Entity;
			}
			set
			{
				Class_Module previousValue = this._Class_Module.Entity;
				if (((previousValue != value) 
							|| (this._Class_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Module.Entity = null;
						previousValue.Class_Module_StudentExams.Remove(this);
					}
					this._Class_Module.Entity = value;
					if ((value != null))
					{
						value.Class_Module_StudentExams.Add(this);
						this._Class_Module_Id = value.Id;
					}
					else
					{
						this._Class_Module_Id = default(int);
					}
					this.SendPropertyChanged("Class_Module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Class_Module_StudentExam", Storage="_Student", ThisKey="Student_Id", OtherKey="Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Class_Module_StudentExams.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Class_Module_StudentExams.Add(this);
						this._Student_Id = value.Id;
					}
					else
					{
						this._Student_Id = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prizes(Prize entity)
		{
			this.SendPropertyChanging();
			entity.Class_Module_StudentExam = this;
		}
		
		private void detach_Prizes(Prize entity)
		{
			this.SendPropertyChanging();
			entity.Class_Module_StudentExam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Company_Type_Id;
		
		private string _Company_Name;
		
		private string _Company_Name_Abbrev;
		
		private string _Company_Logo;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private string _Company_Name_Portal;
		
		private EntitySet<BookOrder> _BookOrders;
		
		private EntitySet<Class> _Classes;
		
		private EntitySet<Faculty> _Faculties;
		
		private EntitySet<Resource> _Resources;
		
		private EntitySet<User_Company> _User_Companies;
		
		private EntityRef<Company_Type> _Company_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompany_Type_IdChanging(int value);
    partial void OnCompany_Type_IdChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnCompany_Name_AbbrevChanging(string value);
    partial void OnCompany_Name_AbbrevChanged();
    partial void OnCompany_LogoChanging(string value);
    partial void OnCompany_LogoChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnCompany_Name_PortalChanging(string value);
    partial void OnCompany_Name_PortalChanged();
    #endregion
		
		public Company()
		{
			this._BookOrders = new EntitySet<BookOrder>(new Action<BookOrder>(this.attach_BookOrders), new Action<BookOrder>(this.detach_BookOrders));
			this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
			this._Faculties = new EntitySet<Faculty>(new Action<Faculty>(this.attach_Faculties), new Action<Faculty>(this.detach_Faculties));
			this._Resources = new EntitySet<Resource>(new Action<Resource>(this.attach_Resources), new Action<Resource>(this.detach_Resources));
			this._User_Companies = new EntitySet<User_Company>(new Action<User_Company>(this.attach_User_Companies), new Action<User_Company>(this.detach_User_Companies));
			this._Company_Type = default(EntityRef<Company_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Type_Id", DbType="Int NOT NULL")]
		public int Company_Type_Id
		{
			get
			{
				return this._Company_Type_Id;
			}
			set
			{
				if ((this._Company_Type_Id != value))
				{
					if (this._Company_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompany_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Company_Type_Id = value;
					this.SendPropertyChanged("Company_Type_Id");
					this.OnCompany_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Name_Abbrev", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Company_Name_Abbrev
		{
			get
			{
				return this._Company_Name_Abbrev;
			}
			set
			{
				if ((this._Company_Name_Abbrev != value))
				{
					this.OnCompany_Name_AbbrevChanging(value);
					this.SendPropertyChanging();
					this._Company_Name_Abbrev = value;
					this.SendPropertyChanged("Company_Name_Abbrev");
					this.OnCompany_Name_AbbrevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Logo", DbType="NVarChar(512)")]
		public string Company_Logo
		{
			get
			{
				return this._Company_Logo;
			}
			set
			{
				if ((this._Company_Logo != value))
				{
					this.OnCompany_LogoChanging(value);
					this.SendPropertyChanging();
					this._Company_Logo = value;
					this.SendPropertyChanged("Company_Logo");
					this.OnCompany_LogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Name_Portal", DbType="NVarChar(MAX)")]
		public string Company_Name_Portal
		{
			get
			{
				return this._Company_Name_Portal;
			}
			set
			{
				if ((this._Company_Name_Portal != value))
				{
					this.OnCompany_Name_PortalChanging(value);
					this.SendPropertyChanging();
					this._Company_Name_Portal = value;
					this.SendPropertyChanged("Company_Name_Portal");
					this.OnCompany_Name_PortalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_BookOrder", Storage="_BookOrders", ThisKey="Id", OtherKey="Company_Id")]
		public EntitySet<BookOrder> BookOrders
		{
			get
			{
				return this._BookOrders;
			}
			set
			{
				this._BookOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Class", Storage="_Classes", ThisKey="Id", OtherKey="Company_Id")]
		public EntitySet<Class> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Faculty", Storage="_Faculties", ThisKey="Id", OtherKey="Company_Id")]
		public EntitySet<Faculty> Faculties
		{
			get
			{
				return this._Faculties;
			}
			set
			{
				this._Faculties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Resource", Storage="_Resources", ThisKey="Id", OtherKey="Company_Id")]
		public EntitySet<Resource> Resources
		{
			get
			{
				return this._Resources;
			}
			set
			{
				this._Resources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_User_Company", Storage="_User_Companies", ThisKey="Id", OtherKey="Company_Id")]
		public EntitySet<User_Company> User_Companies
		{
			get
			{
				return this._User_Companies;
			}
			set
			{
				this._User_Companies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Type_Company", Storage="_Company_Type", ThisKey="Company_Type_Id", OtherKey="Id", IsForeignKey=true)]
		public Company_Type Company_Type
		{
			get
			{
				return this._Company_Type.Entity;
			}
			set
			{
				Company_Type previousValue = this._Company_Type.Entity;
				if (((previousValue != value) 
							|| (this._Company_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company_Type.Entity = null;
						previousValue.Companies.Remove(this);
					}
					this._Company_Type.Entity = value;
					if ((value != null))
					{
						value.Companies.Add(this);
						this._Company_Type_Id = value.Id;
					}
					else
					{
						this._Company_Type_Id = default(int);
					}
					this.SendPropertyChanged("Company_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookOrders(BookOrder entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_BookOrders(BookOrder entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Faculties(Faculty entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Faculties(Faculty entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_User_Companies(User_Company entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_User_Companies(User_Company entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company_Type")]
	public partial class Company_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Company_Type_Name;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntitySet<Company> _Companies;
		
		private EntitySet<Course> _Courses;
		
		private EntitySet<FeePlan> _FeePlans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompany_Type_NameChanging(string value);
    partial void OnCompany_Type_NameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Company_Type()
		{
			this._Companies = new EntitySet<Company>(new Action<Company>(this.attach_Companies), new Action<Company>(this.detach_Companies));
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			this._FeePlans = new EntitySet<FeePlan>(new Action<FeePlan>(this.attach_FeePlans), new Action<FeePlan>(this.detach_FeePlans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Type_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Company_Type_Name
		{
			get
			{
				return this._Company_Type_Name;
			}
			set
			{
				if ((this._Company_Type_Name != value))
				{
					this.OnCompany_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Type_Name = value;
					this.SendPropertyChanged("Company_Type_Name");
					this.OnCompany_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Type_Company", Storage="_Companies", ThisKey="Id", OtherKey="Company_Type_Id")]
		public EntitySet<Company> Companies
		{
			get
			{
				return this._Companies;
			}
			set
			{
				this._Companies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Type_Course", Storage="_Courses", ThisKey="Id", OtherKey="Company_Type_Id")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Type_FeePlan", Storage="_FeePlans", ThisKey="Id", OtherKey="Company_Type_Id")]
		public EntitySet<FeePlan> FeePlans
		{
			get
			{
				return this._FeePlans;
			}
			set
			{
				this._FeePlans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.Company_Type = this;
		}
		
		private void detach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.Company_Type = null;
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Company_Type = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Company_Type = null;
		}
		
		private void attach_FeePlans(FeePlan entity)
		{
			this.SendPropertyChanging();
			entity.Company_Type = this;
		}
		
		private void detach_FeePlans(FeePlan entity)
		{
			this.SendPropertyChanging();
			entity.Company_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Company_Type_Id;
		
		private string _Course_Name;
		
		private string _Course_Code;
		
		private int _Course_Semester_Count;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private System.Nullable<int> _Parent_Course_Id;
		
		private EntitySet<Course> _Courses;
		
		private EntitySet<CourseFamily> _CourseFamilies;
		
		private EntityRef<Course> _Course1;
		
		private EntityRef<Company_Type> _Company_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompany_Type_IdChanging(int value);
    partial void OnCompany_Type_IdChanged();
    partial void OnCourse_NameChanging(string value);
    partial void OnCourse_NameChanged();
    partial void OnCourse_CodeChanging(string value);
    partial void OnCourse_CodeChanged();
    partial void OnCourse_Semester_CountChanging(int value);
    partial void OnCourse_Semester_CountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnParent_Course_IdChanging(System.Nullable<int> value);
    partial void OnParent_Course_IdChanged();
    #endregion
		
		public Course()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			this._CourseFamilies = new EntitySet<CourseFamily>(new Action<CourseFamily>(this.attach_CourseFamilies), new Action<CourseFamily>(this.detach_CourseFamilies));
			this._Course1 = default(EntityRef<Course>);
			this._Company_Type = default(EntityRef<Company_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Type_Id", DbType="Int NOT NULL")]
		public int Company_Type_Id
		{
			get
			{
				return this._Company_Type_Id;
			}
			set
			{
				if ((this._Company_Type_Id != value))
				{
					if (this._Company_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompany_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Company_Type_Id = value;
					this.SendPropertyChanged("Company_Type_Id");
					this.OnCompany_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Course_Name
		{
			get
			{
				return this._Course_Name;
			}
			set
			{
				if ((this._Course_Name != value))
				{
					this.OnCourse_NameChanging(value);
					this.SendPropertyChanging();
					this._Course_Name = value;
					this.SendPropertyChanged("Course_Name");
					this.OnCourse_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_Code", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Course_Code
		{
			get
			{
				return this._Course_Code;
			}
			set
			{
				if ((this._Course_Code != value))
				{
					this.OnCourse_CodeChanging(value);
					this.SendPropertyChanging();
					this._Course_Code = value;
					this.SendPropertyChanged("Course_Code");
					this.OnCourse_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_Semester_Count", DbType="Int NOT NULL")]
		public int Course_Semester_Count
		{
			get
			{
				return this._Course_Semester_Count;
			}
			set
			{
				if ((this._Course_Semester_Count != value))
				{
					this.OnCourse_Semester_CountChanging(value);
					this.SendPropertyChanging();
					this._Course_Semester_Count = value;
					this.SendPropertyChanged("Course_Semester_Count");
					this.OnCourse_Semester_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_Course_Id", DbType="Int")]
		public System.Nullable<int> Parent_Course_Id
		{
			get
			{
				return this._Parent_Course_Id;
			}
			set
			{
				if ((this._Parent_Course_Id != value))
				{
					if (this._Course1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParent_Course_IdChanging(value);
					this.SendPropertyChanging();
					this._Parent_Course_Id = value;
					this.SendPropertyChanged("Parent_Course_Id");
					this.OnParent_Course_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Course", Storage="_Courses", ThisKey="Id", OtherKey="Parent_Course_Id")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseFamily", Storage="_CourseFamilies", ThisKey="Id", OtherKey="Course_Id")]
		public EntitySet<CourseFamily> CourseFamilies
		{
			get
			{
				return this._CourseFamilies;
			}
			set
			{
				this._CourseFamilies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Course", Storage="_Course1", ThisKey="Parent_Course_Id", OtherKey="Id", IsForeignKey=true)]
		public Course Course1
		{
			get
			{
				return this._Course1.Entity;
			}
			set
			{
				Course previousValue = this._Course1.Entity;
				if (((previousValue != value) 
							|| (this._Course1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course1.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._Course1.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._Parent_Course_Id = value.Id;
					}
					else
					{
						this._Parent_Course_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Course1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Type_Course", Storage="_Company_Type", ThisKey="Company_Type_Id", OtherKey="Id", IsForeignKey=true)]
		public Company_Type Company_Type
		{
			get
			{
				return this._Company_Type.Entity;
			}
			set
			{
				Company_Type previousValue = this._Company_Type.Entity;
				if (((previousValue != value) 
							|| (this._Company_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company_Type.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._Company_Type.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._Company_Type_Id = value.Id;
					}
					else
					{
						this._Company_Type_Id = default(int);
					}
					this.SendPropertyChanged("Company_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Course1 = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Course1 = null;
		}
		
		private void attach_CourseFamilies(CourseFamily entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_CourseFamilies(CourseFamily entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseFamily")]
	public partial class CourseFamily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Course_Id;
		
		private string _CourseFamily_Name;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private int _CourseFamily_Year;
		
		private EntitySet<Class> _Classes;
		
		private EntitySet<Module> _Modules;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCourse_IdChanging(int value);
    partial void OnCourse_IdChanged();
    partial void OnCourseFamily_NameChanging(string value);
    partial void OnCourseFamily_NameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnCourseFamily_YearChanging(int value);
    partial void OnCourseFamily_YearChanged();
    #endregion
		
		public CourseFamily()
		{
			this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
			this._Modules = new EntitySet<Module>(new Action<Module>(this.attach_Modules), new Action<Module>(this.detach_Modules));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_Id", DbType="Int NOT NULL")]
		public int Course_Id
		{
			get
			{
				return this._Course_Id;
			}
			set
			{
				if ((this._Course_Id != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_IdChanging(value);
					this.SendPropertyChanging();
					this._Course_Id = value;
					this.SendPropertyChanged("Course_Id");
					this.OnCourse_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseFamily_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CourseFamily_Name
		{
			get
			{
				return this._CourseFamily_Name;
			}
			set
			{
				if ((this._CourseFamily_Name != value))
				{
					this.OnCourseFamily_NameChanging(value);
					this.SendPropertyChanging();
					this._CourseFamily_Name = value;
					this.SendPropertyChanged("CourseFamily_Name");
					this.OnCourseFamily_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseFamily_Year", DbType="Int NOT NULL")]
		public int CourseFamily_Year
		{
			get
			{
				return this._CourseFamily_Year;
			}
			set
			{
				if ((this._CourseFamily_Year != value))
				{
					this.OnCourseFamily_YearChanging(value);
					this.SendPropertyChanging();
					this._CourseFamily_Year = value;
					this.SendPropertyChanged("CourseFamily_Year");
					this.OnCourseFamily_YearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseFamily_Class", Storage="_Classes", ThisKey="Id", OtherKey="CourseFamily_Id")]
		public EntitySet<Class> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseFamily_Module", Storage="_Modules", ThisKey="Id", OtherKey="CourseFamily_Id")]
		public EntitySet<Module> Modules
		{
			get
			{
				return this._Modules;
			}
			set
			{
				this._Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseFamily_Student", Storage="_Students", ThisKey="Id", OtherKey="CourseFamily_Id")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseFamily", Storage="_Course", ThisKey="Course_Id", OtherKey="Id", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.CourseFamilies.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.CourseFamilies.Add(this);
						this._Course_Id = value.Id;
					}
					else
					{
						this._Course_Id = default(int);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.CourseFamily = this;
		}
		
		private void detach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.CourseFamily = null;
		}
		
		private void attach_Modules(Module entity)
		{
			this.SendPropertyChanging();
			entity.CourseFamily = this;
		}
		
		private void detach_Modules(Module entity)
		{
			this.SendPropertyChanging();
			entity.CourseFamily = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.CourseFamily = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.CourseFamily = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faculty")]
	public partial class Faculty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Company_Id;
		
		private string _FC_Name;
		
		private int _FC_Type;
		
		private int _FC_Gender;
		
		private string _FC_Phone;
		
		private string _FC_Email;
		
		private string _FC_Address;
		
		private string _FC_Address_Company;
		
		private System.DateTime _FC_Birthday;
		
		private long _FC_Salary;
		
		private int _FC_WorkingHour;
		
		private string _FC_CMND;
		
		private string _FC_CMND_NoiCap;
		
		private System.DateTime _FC_CMND_NgayCap;
		
		private string _FC_MST;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private string _FC_Nickname;
		
		private EntitySet<Class_Module> _Class_Modules;
		
		private EntitySet<Faculty_Module> _Faculty_Modules;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompany_IdChanging(int value);
    partial void OnCompany_IdChanged();
    partial void OnFC_NameChanging(string value);
    partial void OnFC_NameChanged();
    partial void OnFC_TypeChanging(int value);
    partial void OnFC_TypeChanged();
    partial void OnFC_GenderChanging(int value);
    partial void OnFC_GenderChanged();
    partial void OnFC_PhoneChanging(string value);
    partial void OnFC_PhoneChanged();
    partial void OnFC_EmailChanging(string value);
    partial void OnFC_EmailChanged();
    partial void OnFC_AddressChanging(string value);
    partial void OnFC_AddressChanged();
    partial void OnFC_Address_CompanyChanging(string value);
    partial void OnFC_Address_CompanyChanged();
    partial void OnFC_BirthdayChanging(System.DateTime value);
    partial void OnFC_BirthdayChanged();
    partial void OnFC_SalaryChanging(long value);
    partial void OnFC_SalaryChanged();
    partial void OnFC_WorkingHourChanging(int value);
    partial void OnFC_WorkingHourChanged();
    partial void OnFC_CMNDChanging(string value);
    partial void OnFC_CMNDChanged();
    partial void OnFC_CMND_NoiCapChanging(string value);
    partial void OnFC_CMND_NoiCapChanged();
    partial void OnFC_CMND_NgayCapChanging(System.DateTime value);
    partial void OnFC_CMND_NgayCapChanged();
    partial void OnFC_MSTChanging(string value);
    partial void OnFC_MSTChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnFC_NicknameChanging(string value);
    partial void OnFC_NicknameChanged();
    #endregion
		
		public Faculty()
		{
			this._Class_Modules = new EntitySet<Class_Module>(new Action<Class_Module>(this.attach_Class_Modules), new Action<Class_Module>(this.detach_Class_Modules));
			this._Faculty_Modules = new EntitySet<Faculty_Module>(new Action<Faculty_Module>(this.attach_Faculty_Modules), new Action<Faculty_Module>(this.detach_Faculty_Modules));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Id", DbType="Int NOT NULL")]
		public int Company_Id
		{
			get
			{
				return this._Company_Id;
			}
			set
			{
				if ((this._Company_Id != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompany_IdChanging(value);
					this.SendPropertyChanging();
					this._Company_Id = value;
					this.SendPropertyChanged("Company_Id");
					this.OnCompany_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FC_Name
		{
			get
			{
				return this._FC_Name;
			}
			set
			{
				if ((this._FC_Name != value))
				{
					this.OnFC_NameChanging(value);
					this.SendPropertyChanging();
					this._FC_Name = value;
					this.SendPropertyChanged("FC_Name");
					this.OnFC_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_Type", DbType="Int NOT NULL")]
		public int FC_Type
		{
			get
			{
				return this._FC_Type;
			}
			set
			{
				if ((this._FC_Type != value))
				{
					this.OnFC_TypeChanging(value);
					this.SendPropertyChanging();
					this._FC_Type = value;
					this.SendPropertyChanged("FC_Type");
					this.OnFC_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_Gender", DbType="Int NOT NULL")]
		public int FC_Gender
		{
			get
			{
				return this._FC_Gender;
			}
			set
			{
				if ((this._FC_Gender != value))
				{
					this.OnFC_GenderChanging(value);
					this.SendPropertyChanging();
					this._FC_Gender = value;
					this.SendPropertyChanged("FC_Gender");
					this.OnFC_GenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_Phone", DbType="NVarChar(MAX)")]
		public string FC_Phone
		{
			get
			{
				return this._FC_Phone;
			}
			set
			{
				if ((this._FC_Phone != value))
				{
					this.OnFC_PhoneChanging(value);
					this.SendPropertyChanging();
					this._FC_Phone = value;
					this.SendPropertyChanged("FC_Phone");
					this.OnFC_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_Email", DbType="NVarChar(MAX)")]
		public string FC_Email
		{
			get
			{
				return this._FC_Email;
			}
			set
			{
				if ((this._FC_Email != value))
				{
					this.OnFC_EmailChanging(value);
					this.SendPropertyChanging();
					this._FC_Email = value;
					this.SendPropertyChanged("FC_Email");
					this.OnFC_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_Address", DbType="NVarChar(MAX)")]
		public string FC_Address
		{
			get
			{
				return this._FC_Address;
			}
			set
			{
				if ((this._FC_Address != value))
				{
					this.OnFC_AddressChanging(value);
					this.SendPropertyChanging();
					this._FC_Address = value;
					this.SendPropertyChanged("FC_Address");
					this.OnFC_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_Address_Company", DbType="NVarChar(MAX)")]
		public string FC_Address_Company
		{
			get
			{
				return this._FC_Address_Company;
			}
			set
			{
				if ((this._FC_Address_Company != value))
				{
					this.OnFC_Address_CompanyChanging(value);
					this.SendPropertyChanging();
					this._FC_Address_Company = value;
					this.SendPropertyChanged("FC_Address_Company");
					this.OnFC_Address_CompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_Birthday", DbType="DateTime NOT NULL")]
		public System.DateTime FC_Birthday
		{
			get
			{
				return this._FC_Birthday;
			}
			set
			{
				if ((this._FC_Birthday != value))
				{
					this.OnFC_BirthdayChanging(value);
					this.SendPropertyChanging();
					this._FC_Birthday = value;
					this.SendPropertyChanged("FC_Birthday");
					this.OnFC_BirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_Salary", DbType="BigInt NOT NULL")]
		public long FC_Salary
		{
			get
			{
				return this._FC_Salary;
			}
			set
			{
				if ((this._FC_Salary != value))
				{
					this.OnFC_SalaryChanging(value);
					this.SendPropertyChanging();
					this._FC_Salary = value;
					this.SendPropertyChanged("FC_Salary");
					this.OnFC_SalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_WorkingHour", DbType="Int NOT NULL")]
		public int FC_WorkingHour
		{
			get
			{
				return this._FC_WorkingHour;
			}
			set
			{
				if ((this._FC_WorkingHour != value))
				{
					this.OnFC_WorkingHourChanging(value);
					this.SendPropertyChanging();
					this._FC_WorkingHour = value;
					this.SendPropertyChanged("FC_WorkingHour");
					this.OnFC_WorkingHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_CMND", DbType="NVarChar(MAX)")]
		public string FC_CMND
		{
			get
			{
				return this._FC_CMND;
			}
			set
			{
				if ((this._FC_CMND != value))
				{
					this.OnFC_CMNDChanging(value);
					this.SendPropertyChanging();
					this._FC_CMND = value;
					this.SendPropertyChanged("FC_CMND");
					this.OnFC_CMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_CMND_NoiCap", DbType="NVarChar(MAX)")]
		public string FC_CMND_NoiCap
		{
			get
			{
				return this._FC_CMND_NoiCap;
			}
			set
			{
				if ((this._FC_CMND_NoiCap != value))
				{
					this.OnFC_CMND_NoiCapChanging(value);
					this.SendPropertyChanging();
					this._FC_CMND_NoiCap = value;
					this.SendPropertyChanged("FC_CMND_NoiCap");
					this.OnFC_CMND_NoiCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_CMND_NgayCap", DbType="DateTime NOT NULL")]
		public System.DateTime FC_CMND_NgayCap
		{
			get
			{
				return this._FC_CMND_NgayCap;
			}
			set
			{
				if ((this._FC_CMND_NgayCap != value))
				{
					this.OnFC_CMND_NgayCapChanging(value);
					this.SendPropertyChanging();
					this._FC_CMND_NgayCap = value;
					this.SendPropertyChanged("FC_CMND_NgayCap");
					this.OnFC_CMND_NgayCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_MST", DbType="NVarChar(MAX)")]
		public string FC_MST
		{
			get
			{
				return this._FC_MST;
			}
			set
			{
				if ((this._FC_MST != value))
				{
					this.OnFC_MSTChanging(value);
					this.SendPropertyChanging();
					this._FC_MST = value;
					this.SendPropertyChanged("FC_MST");
					this.OnFC_MSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FC_Nickname", DbType="NVarChar(MAX)")]
		public string FC_Nickname
		{
			get
			{
				return this._FC_Nickname;
			}
			set
			{
				if ((this._FC_Nickname != value))
				{
					this.OnFC_NicknameChanging(value);
					this.SendPropertyChanging();
					this._FC_Nickname = value;
					this.SendPropertyChanged("FC_Nickname");
					this.OnFC_NicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Class_Module", Storage="_Class_Modules", ThisKey="Id", OtherKey="Faculty_Id")]
		public EntitySet<Class_Module> Class_Modules
		{
			get
			{
				return this._Class_Modules;
			}
			set
			{
				this._Class_Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Faculty_Module", Storage="_Faculty_Modules", ThisKey="Id", OtherKey="Faculty_Id")]
		public EntitySet<Faculty_Module> Faculty_Modules
		{
			get
			{
				return this._Faculty_Modules;
			}
			set
			{
				this._Faculty_Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Faculty", Storage="_Company", ThisKey="Company_Id", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Faculties.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Faculties.Add(this);
						this._Company_Id = value.Id;
					}
					else
					{
						this._Company_Id = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Class_Modules(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = this;
		}
		
		private void detach_Class_Modules(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = null;
		}
		
		private void attach_Faculty_Modules(Faculty_Module entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = this;
		}
		
		private void detach_Faculty_Modules(Faculty_Module entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faculty_Module")]
	public partial class Faculty_Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Faculty_Id;
		
		private int _Module_Id;
		
		private System.DateTime _Created_Date;
		
		private EntityRef<Faculty> _Faculty;
		
		private EntityRef<Module> _Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFaculty_IdChanging(int value);
    partial void OnFaculty_IdChanged();
    partial void OnModule_IdChanging(int value);
    partial void OnModule_IdChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Faculty_Module()
		{
			this._Faculty = default(EntityRef<Faculty>);
			this._Module = default(EntityRef<Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Faculty_Id", DbType="Int NOT NULL")]
		public int Faculty_Id
		{
			get
			{
				return this._Faculty_Id;
			}
			set
			{
				if ((this._Faculty_Id != value))
				{
					if (this._Faculty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFaculty_IdChanging(value);
					this.SendPropertyChanging();
					this._Faculty_Id = value;
					this.SendPropertyChanged("Faculty_Id");
					this.OnFaculty_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Id", DbType="Int NOT NULL")]
		public int Module_Id
		{
			get
			{
				return this._Module_Id;
			}
			set
			{
				if ((this._Module_Id != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModule_IdChanging(value);
					this.SendPropertyChanging();
					this._Module_Id = value;
					this.SendPropertyChanged("Module_Id");
					this.OnModule_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Faculty_Module", Storage="_Faculty", ThisKey="Faculty_Id", OtherKey="Id", IsForeignKey=true)]
		public Faculty Faculty
		{
			get
			{
				return this._Faculty.Entity;
			}
			set
			{
				Faculty previousValue = this._Faculty.Entity;
				if (((previousValue != value) 
							|| (this._Faculty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faculty.Entity = null;
						previousValue.Faculty_Modules.Remove(this);
					}
					this._Faculty.Entity = value;
					if ((value != null))
					{
						value.Faculty_Modules.Add(this);
						this._Faculty_Id = value.Id;
					}
					else
					{
						this._Faculty_Id = default(int);
					}
					this.SendPropertyChanged("Faculty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_Faculty_Module", Storage="_Module", ThisKey="Module_Id", OtherKey="Id", IsForeignKey=true)]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.Faculty_Modules.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.Faculty_Modules.Add(this);
						this._Module_Id = value.Id;
					}
					else
					{
						this._Module_Id = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeePlan")]
	public partial class FeePlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Company_Type_Id;
		
		private string _FeePlan_Name;
		
		private int _FeePlan_Price;
		
		private int _FeePlan_Count;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private int _FeePlan_Type;
		
		private int _FeePlan_Months;
		
		private EntitySet<FeePlan_Detail> _FeePlan_Details;
		
		private EntitySet<Student_FeePlan> _Student_FeePlans;
		
		private EntityRef<Company_Type> _Company_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompany_Type_IdChanging(int value);
    partial void OnCompany_Type_IdChanged();
    partial void OnFeePlan_NameChanging(string value);
    partial void OnFeePlan_NameChanged();
    partial void OnFeePlan_PriceChanging(int value);
    partial void OnFeePlan_PriceChanged();
    partial void OnFeePlan_CountChanging(int value);
    partial void OnFeePlan_CountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnFeePlan_TypeChanging(int value);
    partial void OnFeePlan_TypeChanged();
    partial void OnFeePlan_MonthsChanging(int value);
    partial void OnFeePlan_MonthsChanged();
    #endregion
		
		public FeePlan()
		{
			this._FeePlan_Details = new EntitySet<FeePlan_Detail>(new Action<FeePlan_Detail>(this.attach_FeePlan_Details), new Action<FeePlan_Detail>(this.detach_FeePlan_Details));
			this._Student_FeePlans = new EntitySet<Student_FeePlan>(new Action<Student_FeePlan>(this.attach_Student_FeePlans), new Action<Student_FeePlan>(this.detach_Student_FeePlans));
			this._Company_Type = default(EntityRef<Company_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Type_Id", DbType="Int NOT NULL")]
		public int Company_Type_Id
		{
			get
			{
				return this._Company_Type_Id;
			}
			set
			{
				if ((this._Company_Type_Id != value))
				{
					if (this._Company_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompany_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Company_Type_Id = value;
					this.SendPropertyChanged("Company_Type_Id");
					this.OnCompany_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_Name", DbType="NVarChar(MAX)")]
		public string FeePlan_Name
		{
			get
			{
				return this._FeePlan_Name;
			}
			set
			{
				if ((this._FeePlan_Name != value))
				{
					this.OnFeePlan_NameChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_Name = value;
					this.SendPropertyChanged("FeePlan_Name");
					this.OnFeePlan_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_Price", DbType="Int NOT NULL")]
		public int FeePlan_Price
		{
			get
			{
				return this._FeePlan_Price;
			}
			set
			{
				if ((this._FeePlan_Price != value))
				{
					this.OnFeePlan_PriceChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_Price = value;
					this.SendPropertyChanged("FeePlan_Price");
					this.OnFeePlan_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_Count", DbType="Int NOT NULL")]
		public int FeePlan_Count
		{
			get
			{
				return this._FeePlan_Count;
			}
			set
			{
				if ((this._FeePlan_Count != value))
				{
					this.OnFeePlan_CountChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_Count = value;
					this.SendPropertyChanged("FeePlan_Count");
					this.OnFeePlan_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_Type", DbType="Int NOT NULL")]
		public int FeePlan_Type
		{
			get
			{
				return this._FeePlan_Type;
			}
			set
			{
				if ((this._FeePlan_Type != value))
				{
					this.OnFeePlan_TypeChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_Type = value;
					this.SendPropertyChanged("FeePlan_Type");
					this.OnFeePlan_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_Months", DbType="Int NOT NULL")]
		public int FeePlan_Months
		{
			get
			{
				return this._FeePlan_Months;
			}
			set
			{
				if ((this._FeePlan_Months != value))
				{
					this.OnFeePlan_MonthsChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_Months = value;
					this.SendPropertyChanged("FeePlan_Months");
					this.OnFeePlan_MonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePlan_FeePlan_Detail", Storage="_FeePlan_Details", ThisKey="Id", OtherKey="FeePlan_Id")]
		public EntitySet<FeePlan_Detail> FeePlan_Details
		{
			get
			{
				return this._FeePlan_Details;
			}
			set
			{
				this._FeePlan_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePlan_Student_FeePlan", Storage="_Student_FeePlans", ThisKey="Id", OtherKey="FeePlan_Id")]
		public EntitySet<Student_FeePlan> Student_FeePlans
		{
			get
			{
				return this._Student_FeePlans;
			}
			set
			{
				this._Student_FeePlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Type_FeePlan", Storage="_Company_Type", ThisKey="Company_Type_Id", OtherKey="Id", IsForeignKey=true)]
		public Company_Type Company_Type
		{
			get
			{
				return this._Company_Type.Entity;
			}
			set
			{
				Company_Type previousValue = this._Company_Type.Entity;
				if (((previousValue != value) 
							|| (this._Company_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company_Type.Entity = null;
						previousValue.FeePlans.Remove(this);
					}
					this._Company_Type.Entity = value;
					if ((value != null))
					{
						value.FeePlans.Add(this);
						this._Company_Type_Id = value.Id;
					}
					else
					{
						this._Company_Type_Id = default(int);
					}
					this.SendPropertyChanged("Company_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeePlan_Details(FeePlan_Detail entity)
		{
			this.SendPropertyChanging();
			entity.FeePlan = this;
		}
		
		private void detach_FeePlan_Details(FeePlan_Detail entity)
		{
			this.SendPropertyChanging();
			entity.FeePlan = null;
		}
		
		private void attach_Student_FeePlans(Student_FeePlan entity)
		{
			this.SendPropertyChanging();
			entity.FeePlan = this;
		}
		
		private void detach_Student_FeePlans(Student_FeePlan entity)
		{
			this.SendPropertyChanging();
			entity.FeePlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeePlan_Detail")]
	public partial class FeePlan_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FeePlan_Id;
		
		private int _FeePlan_Index;
		
		private int _FeePlan_Amount;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntitySet<Student_FeePlan_Installment> _Student_FeePlan_Installments;
		
		private EntityRef<FeePlan> _FeePlan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFeePlan_IdChanging(int value);
    partial void OnFeePlan_IdChanged();
    partial void OnFeePlan_IndexChanging(int value);
    partial void OnFeePlan_IndexChanged();
    partial void OnFeePlan_AmountChanging(int value);
    partial void OnFeePlan_AmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public FeePlan_Detail()
		{
			this._Student_FeePlan_Installments = new EntitySet<Student_FeePlan_Installment>(new Action<Student_FeePlan_Installment>(this.attach_Student_FeePlan_Installments), new Action<Student_FeePlan_Installment>(this.detach_Student_FeePlan_Installments));
			this._FeePlan = default(EntityRef<FeePlan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_Id", DbType="Int NOT NULL")]
		public int FeePlan_Id
		{
			get
			{
				return this._FeePlan_Id;
			}
			set
			{
				if ((this._FeePlan_Id != value))
				{
					if (this._FeePlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeePlan_IdChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_Id = value;
					this.SendPropertyChanged("FeePlan_Id");
					this.OnFeePlan_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_Index", DbType="Int NOT NULL")]
		public int FeePlan_Index
		{
			get
			{
				return this._FeePlan_Index;
			}
			set
			{
				if ((this._FeePlan_Index != value))
				{
					this.OnFeePlan_IndexChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_Index = value;
					this.SendPropertyChanged("FeePlan_Index");
					this.OnFeePlan_IndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_Amount", DbType="Int NOT NULL")]
		public int FeePlan_Amount
		{
			get
			{
				return this._FeePlan_Amount;
			}
			set
			{
				if ((this._FeePlan_Amount != value))
				{
					this.OnFeePlan_AmountChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_Amount = value;
					this.SendPropertyChanged("FeePlan_Amount");
					this.OnFeePlan_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePlan_Detail_Student_FeePlan_Installment", Storage="_Student_FeePlan_Installments", ThisKey="Id", OtherKey="FeePlan_Detail_Id")]
		public EntitySet<Student_FeePlan_Installment> Student_FeePlan_Installments
		{
			get
			{
				return this._Student_FeePlan_Installments;
			}
			set
			{
				this._Student_FeePlan_Installments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePlan_FeePlan_Detail", Storage="_FeePlan", ThisKey="FeePlan_Id", OtherKey="Id", IsForeignKey=true)]
		public FeePlan FeePlan
		{
			get
			{
				return this._FeePlan.Entity;
			}
			set
			{
				FeePlan previousValue = this._FeePlan.Entity;
				if (((previousValue != value) 
							|| (this._FeePlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeePlan.Entity = null;
						previousValue.FeePlan_Details.Remove(this);
					}
					this._FeePlan.Entity = value;
					if ((value != null))
					{
						value.FeePlan_Details.Add(this);
						this._FeePlan_Id = value.Id;
					}
					else
					{
						this._FeePlan_Id = default(int);
					}
					this.SendPropertyChanged("FeePlan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Student_FeePlan_Installments(Student_FeePlan_Installment entity)
		{
			this.SendPropertyChanging();
			entity.FeePlan_Detail = this;
		}
		
		private void detach_Student_FeePlan_Installments(Student_FeePlan_Installment entity)
		{
			this.SendPropertyChanging();
			entity.FeePlan_Detail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Module")]
	public partial class Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CourseFamily_Id;
		
		private int _Semester;
		
		private string _Semester_Name_Portal;
		
		private string _Module_Name;
		
		private string _Module_Name_Portal;
		
		private string _Module_Code;
		
		private int _Module_Type;
		
		private int _Module_Max_LT;
		
		private int _Module_Max_TH;
		
		private float _Module_DurationByHour;
		
		private int _Module_DurationByDay;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private int _Module_Portal_Type;
		
		private int _Module_Exam_Type;
		
		private EntitySet<Class_Module> _Class_Modules;
		
		private EntitySet<Faculty_Module> _Faculty_Modules;
		
		private EntityRef<CourseFamily> _CourseFamily;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCourseFamily_IdChanging(int value);
    partial void OnCourseFamily_IdChanged();
    partial void OnSemesterChanging(int value);
    partial void OnSemesterChanged();
    partial void OnSemester_Name_PortalChanging(string value);
    partial void OnSemester_Name_PortalChanged();
    partial void OnModule_NameChanging(string value);
    partial void OnModule_NameChanged();
    partial void OnModule_Name_PortalChanging(string value);
    partial void OnModule_Name_PortalChanged();
    partial void OnModule_CodeChanging(string value);
    partial void OnModule_CodeChanged();
    partial void OnModule_TypeChanging(int value);
    partial void OnModule_TypeChanged();
    partial void OnModule_Max_LTChanging(int value);
    partial void OnModule_Max_LTChanged();
    partial void OnModule_Max_THChanging(int value);
    partial void OnModule_Max_THChanged();
    partial void OnModule_DurationByHourChanging(float value);
    partial void OnModule_DurationByHourChanged();
    partial void OnModule_DurationByDayChanging(int value);
    partial void OnModule_DurationByDayChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnModule_Portal_TypeChanging(int value);
    partial void OnModule_Portal_TypeChanged();
    partial void OnModule_Exam_TypeChanging(int value);
    partial void OnModule_Exam_TypeChanged();
    #endregion
		
		public Module()
		{
			this._Class_Modules = new EntitySet<Class_Module>(new Action<Class_Module>(this.attach_Class_Modules), new Action<Class_Module>(this.detach_Class_Modules));
			this._Faculty_Modules = new EntitySet<Faculty_Module>(new Action<Faculty_Module>(this.attach_Faculty_Modules), new Action<Faculty_Module>(this.detach_Faculty_Modules));
			this._CourseFamily = default(EntityRef<CourseFamily>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseFamily_Id", DbType="Int NOT NULL")]
		public int CourseFamily_Id
		{
			get
			{
				return this._CourseFamily_Id;
			}
			set
			{
				if ((this._CourseFamily_Id != value))
				{
					if (this._CourseFamily.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseFamily_IdChanging(value);
					this.SendPropertyChanging();
					this._CourseFamily_Id = value;
					this.SendPropertyChanged("CourseFamily_Id");
					this.OnCourseFamily_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Int NOT NULL")]
		public int Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester_Name_Portal", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Semester_Name_Portal
		{
			get
			{
				return this._Semester_Name_Portal;
			}
			set
			{
				if ((this._Semester_Name_Portal != value))
				{
					this.OnSemester_Name_PortalChanging(value);
					this.SendPropertyChanging();
					this._Semester_Name_Portal = value;
					this.SendPropertyChanged("Semester_Name_Portal");
					this.OnSemester_Name_PortalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Module_Name
		{
			get
			{
				return this._Module_Name;
			}
			set
			{
				if ((this._Module_Name != value))
				{
					this.OnModule_NameChanging(value);
					this.SendPropertyChanging();
					this._Module_Name = value;
					this.SendPropertyChanged("Module_Name");
					this.OnModule_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Name_Portal", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Module_Name_Portal
		{
			get
			{
				return this._Module_Name_Portal;
			}
			set
			{
				if ((this._Module_Name_Portal != value))
				{
					this.OnModule_Name_PortalChanging(value);
					this.SendPropertyChanging();
					this._Module_Name_Portal = value;
					this.SendPropertyChanged("Module_Name_Portal");
					this.OnModule_Name_PortalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Code", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Module_Code
		{
			get
			{
				return this._Module_Code;
			}
			set
			{
				if ((this._Module_Code != value))
				{
					this.OnModule_CodeChanging(value);
					this.SendPropertyChanging();
					this._Module_Code = value;
					this.SendPropertyChanged("Module_Code");
					this.OnModule_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Type", DbType="Int NOT NULL")]
		public int Module_Type
		{
			get
			{
				return this._Module_Type;
			}
			set
			{
				if ((this._Module_Type != value))
				{
					this.OnModule_TypeChanging(value);
					this.SendPropertyChanging();
					this._Module_Type = value;
					this.SendPropertyChanged("Module_Type");
					this.OnModule_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Max_LT", DbType="Int NOT NULL")]
		public int Module_Max_LT
		{
			get
			{
				return this._Module_Max_LT;
			}
			set
			{
				if ((this._Module_Max_LT != value))
				{
					this.OnModule_Max_LTChanging(value);
					this.SendPropertyChanging();
					this._Module_Max_LT = value;
					this.SendPropertyChanged("Module_Max_LT");
					this.OnModule_Max_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Max_TH", DbType="Int NOT NULL")]
		public int Module_Max_TH
		{
			get
			{
				return this._Module_Max_TH;
			}
			set
			{
				if ((this._Module_Max_TH != value))
				{
					this.OnModule_Max_THChanging(value);
					this.SendPropertyChanging();
					this._Module_Max_TH = value;
					this.SendPropertyChanged("Module_Max_TH");
					this.OnModule_Max_THChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_DurationByHour", DbType="Real NOT NULL")]
		public float Module_DurationByHour
		{
			get
			{
				return this._Module_DurationByHour;
			}
			set
			{
				if ((this._Module_DurationByHour != value))
				{
					this.OnModule_DurationByHourChanging(value);
					this.SendPropertyChanging();
					this._Module_DurationByHour = value;
					this.SendPropertyChanged("Module_DurationByHour");
					this.OnModule_DurationByHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_DurationByDay", DbType="Int NOT NULL")]
		public int Module_DurationByDay
		{
			get
			{
				return this._Module_DurationByDay;
			}
			set
			{
				if ((this._Module_DurationByDay != value))
				{
					this.OnModule_DurationByDayChanging(value);
					this.SendPropertyChanging();
					this._Module_DurationByDay = value;
					this.SendPropertyChanged("Module_DurationByDay");
					this.OnModule_DurationByDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Portal_Type", DbType="Int NOT NULL")]
		public int Module_Portal_Type
		{
			get
			{
				return this._Module_Portal_Type;
			}
			set
			{
				if ((this._Module_Portal_Type != value))
				{
					this.OnModule_Portal_TypeChanging(value);
					this.SendPropertyChanging();
					this._Module_Portal_Type = value;
					this.SendPropertyChanged("Module_Portal_Type");
					this.OnModule_Portal_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Exam_Type", DbType="Int NOT NULL")]
		public int Module_Exam_Type
		{
			get
			{
				return this._Module_Exam_Type;
			}
			set
			{
				if ((this._Module_Exam_Type != value))
				{
					this.OnModule_Exam_TypeChanging(value);
					this.SendPropertyChanging();
					this._Module_Exam_Type = value;
					this.SendPropertyChanged("Module_Exam_Type");
					this.OnModule_Exam_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_Class_Module", Storage="_Class_Modules", ThisKey="Id", OtherKey="Module_Id")]
		public EntitySet<Class_Module> Class_Modules
		{
			get
			{
				return this._Class_Modules;
			}
			set
			{
				this._Class_Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_Faculty_Module", Storage="_Faculty_Modules", ThisKey="Id", OtherKey="Module_Id")]
		public EntitySet<Faculty_Module> Faculty_Modules
		{
			get
			{
				return this._Faculty_Modules;
			}
			set
			{
				this._Faculty_Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseFamily_Module", Storage="_CourseFamily", ThisKey="CourseFamily_Id", OtherKey="Id", IsForeignKey=true)]
		public CourseFamily CourseFamily
		{
			get
			{
				return this._CourseFamily.Entity;
			}
			set
			{
				CourseFamily previousValue = this._CourseFamily.Entity;
				if (((previousValue != value) 
							|| (this._CourseFamily.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseFamily.Entity = null;
						previousValue.Modules.Remove(this);
					}
					this._CourseFamily.Entity = value;
					if ((value != null))
					{
						value.Modules.Add(this);
						this._CourseFamily_Id = value.Id;
					}
					else
					{
						this._CourseFamily_Id = default(int);
					}
					this.SendPropertyChanged("CourseFamily");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Class_Modules(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_Class_Modules(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
		
		private void attach_Faculty_Modules(Faculty_Module entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_Faculty_Modules(Faculty_Module entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prize")]
	public partial class Prize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Student_Id;
		
		private System.Nullable<int> _Exam_Id;
		
		private string _Title;
		
		private System.DateTime _Prize_Date;
		
		private int _Prize_Type;
		
		private int _Prize_Semester;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntityRef<Class_Module_StudentExam> _Class_Module_StudentExam;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    partial void OnExam_IdChanging(System.Nullable<int> value);
    partial void OnExam_IdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPrize_DateChanging(System.DateTime value);
    partial void OnPrize_DateChanged();
    partial void OnPrize_TypeChanging(int value);
    partial void OnPrize_TypeChanged();
    partial void OnPrize_SemesterChanging(int value);
    partial void OnPrize_SemesterChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Prize()
		{
			this._Class_Module_StudentExam = default(EntityRef<Class_Module_StudentExam>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int NOT NULL")]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_Id", DbType="Int")]
		public System.Nullable<int> Exam_Id
		{
			get
			{
				return this._Exam_Id;
			}
			set
			{
				if ((this._Exam_Id != value))
				{
					if (this._Class_Module_StudentExam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExam_IdChanging(value);
					this.SendPropertyChanging();
					this._Exam_Id = value;
					this.SendPropertyChanged("Exam_Id");
					this.OnExam_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prize_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Prize_Date
		{
			get
			{
				return this._Prize_Date;
			}
			set
			{
				if ((this._Prize_Date != value))
				{
					this.OnPrize_DateChanging(value);
					this.SendPropertyChanging();
					this._Prize_Date = value;
					this.SendPropertyChanged("Prize_Date");
					this.OnPrize_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prize_Type", DbType="Int NOT NULL")]
		public int Prize_Type
		{
			get
			{
				return this._Prize_Type;
			}
			set
			{
				if ((this._Prize_Type != value))
				{
					this.OnPrize_TypeChanging(value);
					this.SendPropertyChanging();
					this._Prize_Type = value;
					this.SendPropertyChanged("Prize_Type");
					this.OnPrize_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prize_Semester", DbType="Int NOT NULL")]
		public int Prize_Semester
		{
			get
			{
				return this._Prize_Semester;
			}
			set
			{
				if ((this._Prize_Semester != value))
				{
					this.OnPrize_SemesterChanging(value);
					this.SendPropertyChanging();
					this._Prize_Semester = value;
					this.SendPropertyChanged("Prize_Semester");
					this.OnPrize_SemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Module_StudentExam_Prize", Storage="_Class_Module_StudentExam", ThisKey="Exam_Id", OtherKey="Id", IsForeignKey=true)]
		public Class_Module_StudentExam Class_Module_StudentExam
		{
			get
			{
				return this._Class_Module_StudentExam.Entity;
			}
			set
			{
				Class_Module_StudentExam previousValue = this._Class_Module_StudentExam.Entity;
				if (((previousValue != value) 
							|| (this._Class_Module_StudentExam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class_Module_StudentExam.Entity = null;
						previousValue.Prizes.Remove(this);
					}
					this._Class_Module_StudentExam.Entity = value;
					if ((value != null))
					{
						value.Prizes.Add(this);
						this._Exam_Id = value.Id;
					}
					else
					{
						this._Exam_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Class_Module_StudentExam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Prize", Storage="_Student", ThisKey="Student_Id", OtherKey="Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Prizes.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Prizes.Add(this);
						this._Student_Id = value.Id;
					}
					else
					{
						this._Student_Id = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource")]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Company_Id;
		
		private string _Resource_Name;
		
		private int _Resource_Capacity;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntitySet<Class_Module> _Class_Modules;
		
		private EntitySet<Class_Module> _Class_Modules1;
		
		private EntitySet<Class_Module> _Class_Modules2;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompany_IdChanging(int value);
    partial void OnCompany_IdChanged();
    partial void OnResource_NameChanging(string value);
    partial void OnResource_NameChanged();
    partial void OnResource_CapacityChanging(int value);
    partial void OnResource_CapacityChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Resource()
		{
			this._Class_Modules = new EntitySet<Class_Module>(new Action<Class_Module>(this.attach_Class_Modules), new Action<Class_Module>(this.detach_Class_Modules));
			this._Class_Modules1 = new EntitySet<Class_Module>(new Action<Class_Module>(this.attach_Class_Modules1), new Action<Class_Module>(this.detach_Class_Modules1));
			this._Class_Modules2 = new EntitySet<Class_Module>(new Action<Class_Module>(this.attach_Class_Modules2), new Action<Class_Module>(this.detach_Class_Modules2));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Id", DbType="Int NOT NULL")]
		public int Company_Id
		{
			get
			{
				return this._Company_Id;
			}
			set
			{
				if ((this._Company_Id != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompany_IdChanging(value);
					this.SendPropertyChanging();
					this._Company_Id = value;
					this.SendPropertyChanged("Company_Id");
					this.OnCompany_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Resource_Name
		{
			get
			{
				return this._Resource_Name;
			}
			set
			{
				if ((this._Resource_Name != value))
				{
					this.OnResource_NameChanging(value);
					this.SendPropertyChanging();
					this._Resource_Name = value;
					this.SendPropertyChanged("Resource_Name");
					this.OnResource_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_Capacity", DbType="Int NOT NULL")]
		public int Resource_Capacity
		{
			get
			{
				return this._Resource_Capacity;
			}
			set
			{
				if ((this._Resource_Capacity != value))
				{
					this.OnResource_CapacityChanging(value);
					this.SendPropertyChanging();
					this._Resource_Capacity = value;
					this.SendPropertyChanged("Resource_Capacity");
					this.OnResource_CapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Class_Module", Storage="_Class_Modules", ThisKey="Id", OtherKey="Resource_Exam_Id")]
		public EntitySet<Class_Module> Class_Modules
		{
			get
			{
				return this._Class_Modules;
			}
			set
			{
				this._Class_Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Class_Module1", Storage="_Class_Modules1", ThisKey="Id", OtherKey="Resource_LT_Id")]
		public EntitySet<Class_Module> Class_Modules1
		{
			get
			{
				return this._Class_Modules1;
			}
			set
			{
				this._Class_Modules1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Class_Module2", Storage="_Class_Modules2", ThisKey="Id", OtherKey="Resource_TH_Id")]
		public EntitySet<Class_Module> Class_Modules2
		{
			get
			{
				return this._Class_Modules2;
			}
			set
			{
				this._Class_Modules2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Resource", Storage="_Company", ThisKey="Company_Id", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Resources.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Resources.Add(this);
						this._Company_Id = value.Id;
					}
					else
					{
						this._Company_Id = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Class_Modules(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_Class_Modules(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_Class_Modules1(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Resource1 = this;
		}
		
		private void detach_Class_Modules1(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Resource1 = null;
		}
		
		private void attach_Class_Modules2(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Resource2 = this;
		}
		
		private void detach_Class_Modules2(Class_Module entity)
		{
			this.SendPropertyChanging();
			entity.Resource2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role_Type")]
	public partial class Role_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Role_Type_Name;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntitySet<User_Profile> _User_Profiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRole_Type_NameChanging(string value);
    partial void OnRole_Type_NameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Role_Type()
		{
			this._User_Profiles = new EntitySet<User_Profile>(new Action<User_Profile>(this.attach_User_Profiles), new Action<User_Profile>(this.detach_User_Profiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Type_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Role_Type_Name
		{
			get
			{
				return this._Role_Type_Name;
			}
			set
			{
				if ((this._Role_Type_Name != value))
				{
					this.OnRole_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Role_Type_Name = value;
					this.SendPropertyChanged("Role_Type_Name");
					this.OnRole_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Type_User_Profile", Storage="_User_Profiles", ThisKey="Id", OtherKey="Role_Type_Id")]
		public EntitySet<User_Profile> User_Profiles
		{
			get
			{
				return this._User_Profiles;
			}
			set
			{
				this._User_Profiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Profiles(User_Profile entity)
		{
			this.SendPropertyChanging();
			entity.Role_Type = this;
		}
		
		private void detach_User_Profiles(User_Profile entity)
		{
			this.SendPropertyChanging();
			entity.Role_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CourseFamily_Id;
		
		private int _Class_Id;
		
		private string _Student_EnrollNumber;
		
		private string _Student_FirstName;
		
		private string _Student_LastName;
		
		private int _Student_Gender;
		
		private System.DateTime _Student_Birthday;
		
		private string _Student_Avatar;
		
		private string _Student_MobilePhone;
		
		private string _Student_HomePhone;
		
		private string _Student_Email;
		
		private string _Student_Facebook;
		
		private string _Student_Address;
		
		private string _Student_ContactAddress;
		
		private string _Student_City;
		
		private string _Student_District;
		
		private string _Student_Sponsor;
		
		private string _Student_Sponsor_Relation;
		
		private string _Student_Sponsor_Address;
		
		private System.DateTime _Student_Application_Date;
		
		private string _Student_Application_CS;
		
		private string _Student_Application_Documents;
		
		private int _Student_Status;
		
		private System.DateTime _Student_Status_Date;
		
		private int _Student_Promotion;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private string _HighSchool;
		
		private string _University;
		
		private string _Company;
		
		private string _Company_Address;
		
		private string _Company_Position;
		
		private string _Company_Salary;
		
		private string _Student_ContactPhone;
		
		private EntitySet<BookOrder_Detail> _BookOrder_Details;
		
		private EntitySet<Class_Module_Day_Student> _Class_Module_Day_Students;
		
		private EntitySet<Class_Module_StudentExam> _Class_Module_StudentExams;
		
		private EntitySet<Prize> _Prizes;
		
		private EntitySet<Student_AcademicStatus> _Student_AcademicStatus;
		
		private EntitySet<Student_ClassHistory> _Student_ClassHistories;
		
		private EntitySet<Student_FeePlan> _Student_FeePlans;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<CourseFamily> _CourseFamily;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCourseFamily_IdChanging(int value);
    partial void OnCourseFamily_IdChanged();
    partial void OnClass_IdChanging(int value);
    partial void OnClass_IdChanged();
    partial void OnStudent_EnrollNumberChanging(string value);
    partial void OnStudent_EnrollNumberChanged();
    partial void OnStudent_FirstNameChanging(string value);
    partial void OnStudent_FirstNameChanged();
    partial void OnStudent_LastNameChanging(string value);
    partial void OnStudent_LastNameChanged();
    partial void OnStudent_GenderChanging(int value);
    partial void OnStudent_GenderChanged();
    partial void OnStudent_BirthdayChanging(System.DateTime value);
    partial void OnStudent_BirthdayChanged();
    partial void OnStudent_AvatarChanging(string value);
    partial void OnStudent_AvatarChanged();
    partial void OnStudent_MobilePhoneChanging(string value);
    partial void OnStudent_MobilePhoneChanged();
    partial void OnStudent_HomePhoneChanging(string value);
    partial void OnStudent_HomePhoneChanged();
    partial void OnStudent_EmailChanging(string value);
    partial void OnStudent_EmailChanged();
    partial void OnStudent_FacebookChanging(string value);
    partial void OnStudent_FacebookChanged();
    partial void OnStudent_AddressChanging(string value);
    partial void OnStudent_AddressChanged();
    partial void OnStudent_ContactAddressChanging(string value);
    partial void OnStudent_ContactAddressChanged();
    partial void OnStudent_CityChanging(string value);
    partial void OnStudent_CityChanged();
    partial void OnStudent_DistrictChanging(string value);
    partial void OnStudent_DistrictChanged();
    partial void OnStudent_SponsorChanging(string value);
    partial void OnStudent_SponsorChanged();
    partial void OnStudent_Sponsor_RelationChanging(string value);
    partial void OnStudent_Sponsor_RelationChanged();
    partial void OnStudent_Sponsor_AddressChanging(string value);
    partial void OnStudent_Sponsor_AddressChanged();
    partial void OnStudent_Application_DateChanging(System.DateTime value);
    partial void OnStudent_Application_DateChanged();
    partial void OnStudent_Application_CSChanging(string value);
    partial void OnStudent_Application_CSChanged();
    partial void OnStudent_Application_DocumentsChanging(string value);
    partial void OnStudent_Application_DocumentsChanged();
    partial void OnStudent_StatusChanging(int value);
    partial void OnStudent_StatusChanged();
    partial void OnStudent_Status_DateChanging(System.DateTime value);
    partial void OnStudent_Status_DateChanged();
    partial void OnStudent_PromotionChanging(int value);
    partial void OnStudent_PromotionChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnHighSchoolChanging(string value);
    partial void OnHighSchoolChanged();
    partial void OnUniversityChanging(string value);
    partial void OnUniversityChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnCompany_AddressChanging(string value);
    partial void OnCompany_AddressChanged();
    partial void OnCompany_PositionChanging(string value);
    partial void OnCompany_PositionChanged();
    partial void OnCompany_SalaryChanging(string value);
    partial void OnCompany_SalaryChanged();
    partial void OnStudent_ContactPhoneChanging(string value);
    partial void OnStudent_ContactPhoneChanged();
    #endregion
		
		public Student()
		{
			this._BookOrder_Details = new EntitySet<BookOrder_Detail>(new Action<BookOrder_Detail>(this.attach_BookOrder_Details), new Action<BookOrder_Detail>(this.detach_BookOrder_Details));
			this._Class_Module_Day_Students = new EntitySet<Class_Module_Day_Student>(new Action<Class_Module_Day_Student>(this.attach_Class_Module_Day_Students), new Action<Class_Module_Day_Student>(this.detach_Class_Module_Day_Students));
			this._Class_Module_StudentExams = new EntitySet<Class_Module_StudentExam>(new Action<Class_Module_StudentExam>(this.attach_Class_Module_StudentExams), new Action<Class_Module_StudentExam>(this.detach_Class_Module_StudentExams));
			this._Prizes = new EntitySet<Prize>(new Action<Prize>(this.attach_Prizes), new Action<Prize>(this.detach_Prizes));
			this._Student_AcademicStatus = new EntitySet<Student_AcademicStatus>(new Action<Student_AcademicStatus>(this.attach_Student_AcademicStatus), new Action<Student_AcademicStatus>(this.detach_Student_AcademicStatus));
			this._Student_ClassHistories = new EntitySet<Student_ClassHistory>(new Action<Student_ClassHistory>(this.attach_Student_ClassHistories), new Action<Student_ClassHistory>(this.detach_Student_ClassHistories));
			this._Student_FeePlans = new EntitySet<Student_FeePlan>(new Action<Student_FeePlan>(this.attach_Student_FeePlans), new Action<Student_FeePlan>(this.detach_Student_FeePlans));
			this._Class = default(EntityRef<Class>);
			this._CourseFamily = default(EntityRef<CourseFamily>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseFamily_Id", DbType="Int NOT NULL")]
		public int CourseFamily_Id
		{
			get
			{
				return this._CourseFamily_Id;
			}
			set
			{
				if ((this._CourseFamily_Id != value))
				{
					if (this._CourseFamily.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseFamily_IdChanging(value);
					this.SendPropertyChanging();
					this._CourseFamily_Id = value;
					this.SendPropertyChanged("CourseFamily_Id");
					this.OnCourseFamily_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Id", DbType="Int NOT NULL")]
		public int Class_Id
		{
			get
			{
				return this._Class_Id;
			}
			set
			{
				if ((this._Class_Id != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClass_IdChanging(value);
					this.SendPropertyChanging();
					this._Class_Id = value;
					this.SendPropertyChanged("Class_Id");
					this.OnClass_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_EnrollNumber", DbType="NVarChar(MAX)")]
		public string Student_EnrollNumber
		{
			get
			{
				return this._Student_EnrollNumber;
			}
			set
			{
				if ((this._Student_EnrollNumber != value))
				{
					this.OnStudent_EnrollNumberChanging(value);
					this.SendPropertyChanging();
					this._Student_EnrollNumber = value;
					this.SendPropertyChanged("Student_EnrollNumber");
					this.OnStudent_EnrollNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_FirstName", DbType="NVarChar(MAX)")]
		public string Student_FirstName
		{
			get
			{
				return this._Student_FirstName;
			}
			set
			{
				if ((this._Student_FirstName != value))
				{
					this.OnStudent_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Student_FirstName = value;
					this.SendPropertyChanged("Student_FirstName");
					this.OnStudent_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_LastName", DbType="NVarChar(MAX)")]
		public string Student_LastName
		{
			get
			{
				return this._Student_LastName;
			}
			set
			{
				if ((this._Student_LastName != value))
				{
					this.OnStudent_LastNameChanging(value);
					this.SendPropertyChanging();
					this._Student_LastName = value;
					this.SendPropertyChanged("Student_LastName");
					this.OnStudent_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Gender", DbType="Int NOT NULL")]
		public int Student_Gender
		{
			get
			{
				return this._Student_Gender;
			}
			set
			{
				if ((this._Student_Gender != value))
				{
					this.OnStudent_GenderChanging(value);
					this.SendPropertyChanging();
					this._Student_Gender = value;
					this.SendPropertyChanged("Student_Gender");
					this.OnStudent_GenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Birthday", DbType="DateTime NOT NULL")]
		public System.DateTime Student_Birthday
		{
			get
			{
				return this._Student_Birthday;
			}
			set
			{
				if ((this._Student_Birthday != value))
				{
					this.OnStudent_BirthdayChanging(value);
					this.SendPropertyChanging();
					this._Student_Birthday = value;
					this.SendPropertyChanged("Student_Birthday");
					this.OnStudent_BirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Avatar", DbType="NVarChar(MAX)")]
		public string Student_Avatar
		{
			get
			{
				return this._Student_Avatar;
			}
			set
			{
				if ((this._Student_Avatar != value))
				{
					this.OnStudent_AvatarChanging(value);
					this.SendPropertyChanging();
					this._Student_Avatar = value;
					this.SendPropertyChanged("Student_Avatar");
					this.OnStudent_AvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_MobilePhone", DbType="NVarChar(MAX)")]
		public string Student_MobilePhone
		{
			get
			{
				return this._Student_MobilePhone;
			}
			set
			{
				if ((this._Student_MobilePhone != value))
				{
					this.OnStudent_MobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._Student_MobilePhone = value;
					this.SendPropertyChanged("Student_MobilePhone");
					this.OnStudent_MobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_HomePhone", DbType="NVarChar(MAX)")]
		public string Student_HomePhone
		{
			get
			{
				return this._Student_HomePhone;
			}
			set
			{
				if ((this._Student_HomePhone != value))
				{
					this.OnStudent_HomePhoneChanging(value);
					this.SendPropertyChanging();
					this._Student_HomePhone = value;
					this.SendPropertyChanged("Student_HomePhone");
					this.OnStudent_HomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Email", DbType="NVarChar(MAX)")]
		public string Student_Email
		{
			get
			{
				return this._Student_Email;
			}
			set
			{
				if ((this._Student_Email != value))
				{
					this.OnStudent_EmailChanging(value);
					this.SendPropertyChanging();
					this._Student_Email = value;
					this.SendPropertyChanged("Student_Email");
					this.OnStudent_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Facebook", DbType="NVarChar(MAX)")]
		public string Student_Facebook
		{
			get
			{
				return this._Student_Facebook;
			}
			set
			{
				if ((this._Student_Facebook != value))
				{
					this.OnStudent_FacebookChanging(value);
					this.SendPropertyChanging();
					this._Student_Facebook = value;
					this.SendPropertyChanged("Student_Facebook");
					this.OnStudent_FacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Address", DbType="NVarChar(MAX)")]
		public string Student_Address
		{
			get
			{
				return this._Student_Address;
			}
			set
			{
				if ((this._Student_Address != value))
				{
					this.OnStudent_AddressChanging(value);
					this.SendPropertyChanging();
					this._Student_Address = value;
					this.SendPropertyChanged("Student_Address");
					this.OnStudent_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ContactAddress", DbType="NVarChar(MAX)")]
		public string Student_ContactAddress
		{
			get
			{
				return this._Student_ContactAddress;
			}
			set
			{
				if ((this._Student_ContactAddress != value))
				{
					this.OnStudent_ContactAddressChanging(value);
					this.SendPropertyChanging();
					this._Student_ContactAddress = value;
					this.SendPropertyChanged("Student_ContactAddress");
					this.OnStudent_ContactAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_City", DbType="NVarChar(MAX)")]
		public string Student_City
		{
			get
			{
				return this._Student_City;
			}
			set
			{
				if ((this._Student_City != value))
				{
					this.OnStudent_CityChanging(value);
					this.SendPropertyChanging();
					this._Student_City = value;
					this.SendPropertyChanged("Student_City");
					this.OnStudent_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_District", DbType="NVarChar(MAX)")]
		public string Student_District
		{
			get
			{
				return this._Student_District;
			}
			set
			{
				if ((this._Student_District != value))
				{
					this.OnStudent_DistrictChanging(value);
					this.SendPropertyChanging();
					this._Student_District = value;
					this.SendPropertyChanged("Student_District");
					this.OnStudent_DistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Sponsor", DbType="NVarChar(MAX)")]
		public string Student_Sponsor
		{
			get
			{
				return this._Student_Sponsor;
			}
			set
			{
				if ((this._Student_Sponsor != value))
				{
					this.OnStudent_SponsorChanging(value);
					this.SendPropertyChanging();
					this._Student_Sponsor = value;
					this.SendPropertyChanged("Student_Sponsor");
					this.OnStudent_SponsorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Sponsor_Relation", DbType="NVarChar(MAX)")]
		public string Student_Sponsor_Relation
		{
			get
			{
				return this._Student_Sponsor_Relation;
			}
			set
			{
				if ((this._Student_Sponsor_Relation != value))
				{
					this.OnStudent_Sponsor_RelationChanging(value);
					this.SendPropertyChanging();
					this._Student_Sponsor_Relation = value;
					this.SendPropertyChanged("Student_Sponsor_Relation");
					this.OnStudent_Sponsor_RelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Sponsor_Address", DbType="NVarChar(MAX)")]
		public string Student_Sponsor_Address
		{
			get
			{
				return this._Student_Sponsor_Address;
			}
			set
			{
				if ((this._Student_Sponsor_Address != value))
				{
					this.OnStudent_Sponsor_AddressChanging(value);
					this.SendPropertyChanging();
					this._Student_Sponsor_Address = value;
					this.SendPropertyChanged("Student_Sponsor_Address");
					this.OnStudent_Sponsor_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Application_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Student_Application_Date
		{
			get
			{
				return this._Student_Application_Date;
			}
			set
			{
				if ((this._Student_Application_Date != value))
				{
					this.OnStudent_Application_DateChanging(value);
					this.SendPropertyChanging();
					this._Student_Application_Date = value;
					this.SendPropertyChanged("Student_Application_Date");
					this.OnStudent_Application_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Application_CS", DbType="NVarChar(MAX)")]
		public string Student_Application_CS
		{
			get
			{
				return this._Student_Application_CS;
			}
			set
			{
				if ((this._Student_Application_CS != value))
				{
					this.OnStudent_Application_CSChanging(value);
					this.SendPropertyChanging();
					this._Student_Application_CS = value;
					this.SendPropertyChanged("Student_Application_CS");
					this.OnStudent_Application_CSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Application_Documents", DbType="NVarChar(MAX)")]
		public string Student_Application_Documents
		{
			get
			{
				return this._Student_Application_Documents;
			}
			set
			{
				if ((this._Student_Application_Documents != value))
				{
					this.OnStudent_Application_DocumentsChanging(value);
					this.SendPropertyChanging();
					this._Student_Application_Documents = value;
					this.SendPropertyChanged("Student_Application_Documents");
					this.OnStudent_Application_DocumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Status", DbType="Int NOT NULL")]
		public int Student_Status
		{
			get
			{
				return this._Student_Status;
			}
			set
			{
				if ((this._Student_Status != value))
				{
					this.OnStudent_StatusChanging(value);
					this.SendPropertyChanging();
					this._Student_Status = value;
					this.SendPropertyChanged("Student_Status");
					this.OnStudent_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Status_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Student_Status_Date
		{
			get
			{
				return this._Student_Status_Date;
			}
			set
			{
				if ((this._Student_Status_Date != value))
				{
					this.OnStudent_Status_DateChanging(value);
					this.SendPropertyChanging();
					this._Student_Status_Date = value;
					this.SendPropertyChanged("Student_Status_Date");
					this.OnStudent_Status_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Promotion", DbType="Int NOT NULL")]
		public int Student_Promotion
		{
			get
			{
				return this._Student_Promotion;
			}
			set
			{
				if ((this._Student_Promotion != value))
				{
					this.OnStudent_PromotionChanging(value);
					this.SendPropertyChanging();
					this._Student_Promotion = value;
					this.SendPropertyChanged("Student_Promotion");
					this.OnStudent_PromotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighSchool", DbType="NVarChar(MAX)")]
		public string HighSchool
		{
			get
			{
				return this._HighSchool;
			}
			set
			{
				if ((this._HighSchool != value))
				{
					this.OnHighSchoolChanging(value);
					this.SendPropertyChanging();
					this._HighSchool = value;
					this.SendPropertyChanged("HighSchool");
					this.OnHighSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University", DbType="NVarChar(MAX)")]
		public string University
		{
			get
			{
				return this._University;
			}
			set
			{
				if ((this._University != value))
				{
					this.OnUniversityChanging(value);
					this.SendPropertyChanging();
					this._University = value;
					this.SendPropertyChanged("University");
					this.OnUniversityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(MAX)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Address", DbType="NVarChar(MAX)")]
		public string Company_Address
		{
			get
			{
				return this._Company_Address;
			}
			set
			{
				if ((this._Company_Address != value))
				{
					this.OnCompany_AddressChanging(value);
					this.SendPropertyChanging();
					this._Company_Address = value;
					this.SendPropertyChanged("Company_Address");
					this.OnCompany_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Position", DbType="NVarChar(MAX)")]
		public string Company_Position
		{
			get
			{
				return this._Company_Position;
			}
			set
			{
				if ((this._Company_Position != value))
				{
					this.OnCompany_PositionChanging(value);
					this.SendPropertyChanging();
					this._Company_Position = value;
					this.SendPropertyChanged("Company_Position");
					this.OnCompany_PositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Salary", DbType="NVarChar(MAX)")]
		public string Company_Salary
		{
			get
			{
				return this._Company_Salary;
			}
			set
			{
				if ((this._Company_Salary != value))
				{
					this.OnCompany_SalaryChanging(value);
					this.SendPropertyChanging();
					this._Company_Salary = value;
					this.SendPropertyChanged("Company_Salary");
					this.OnCompany_SalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ContactPhone", DbType="NVarChar(MAX)")]
		public string Student_ContactPhone
		{
			get
			{
				return this._Student_ContactPhone;
			}
			set
			{
				if ((this._Student_ContactPhone != value))
				{
					this.OnStudent_ContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._Student_ContactPhone = value;
					this.SendPropertyChanged("Student_ContactPhone");
					this.OnStudent_ContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_BookOrder_Detail", Storage="_BookOrder_Details", ThisKey="Id", OtherKey="Student_Id")]
		public EntitySet<BookOrder_Detail> BookOrder_Details
		{
			get
			{
				return this._BookOrder_Details;
			}
			set
			{
				this._BookOrder_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Class_Module_Day_Student", Storage="_Class_Module_Day_Students", ThisKey="Id", OtherKey="Student_Id")]
		public EntitySet<Class_Module_Day_Student> Class_Module_Day_Students
		{
			get
			{
				return this._Class_Module_Day_Students;
			}
			set
			{
				this._Class_Module_Day_Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Class_Module_StudentExam", Storage="_Class_Module_StudentExams", ThisKey="Id", OtherKey="Student_Id")]
		public EntitySet<Class_Module_StudentExam> Class_Module_StudentExams
		{
			get
			{
				return this._Class_Module_StudentExams;
			}
			set
			{
				this._Class_Module_StudentExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Prize", Storage="_Prizes", ThisKey="Id", OtherKey="Student_Id")]
		public EntitySet<Prize> Prizes
		{
			get
			{
				return this._Prizes;
			}
			set
			{
				this._Prizes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Student_AcademicStatus", Storage="_Student_AcademicStatus", ThisKey="Id", OtherKey="Student_Id")]
		public EntitySet<Student_AcademicStatus> Student_AcademicStatus
		{
			get
			{
				return this._Student_AcademicStatus;
			}
			set
			{
				this._Student_AcademicStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Student_ClassHistory", Storage="_Student_ClassHistories", ThisKey="Id", OtherKey="Student_Id")]
		public EntitySet<Student_ClassHistory> Student_ClassHistories
		{
			get
			{
				return this._Student_ClassHistories;
			}
			set
			{
				this._Student_ClassHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Student_FeePlan", Storage="_Student_FeePlans", ThisKey="Id", OtherKey="Student_Id")]
		public EntitySet<Student_FeePlan> Student_FeePlans
		{
			get
			{
				return this._Student_FeePlans;
			}
			set
			{
				this._Student_FeePlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Student", Storage="_Class", ThisKey="Class_Id", OtherKey="Id", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Class_Id = value.Id;
					}
					else
					{
						this._Class_Id = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseFamily_Student", Storage="_CourseFamily", ThisKey="CourseFamily_Id", OtherKey="Id", IsForeignKey=true)]
		public CourseFamily CourseFamily
		{
			get
			{
				return this._CourseFamily.Entity;
			}
			set
			{
				CourseFamily previousValue = this._CourseFamily.Entity;
				if (((previousValue != value) 
							|| (this._CourseFamily.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseFamily.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._CourseFamily.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._CourseFamily_Id = value.Id;
					}
					else
					{
						this._CourseFamily_Id = default(int);
					}
					this.SendPropertyChanged("CourseFamily");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookOrder_Details(BookOrder_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_BookOrder_Details(BookOrder_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Class_Module_Day_Students(Class_Module_Day_Student entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Class_Module_Day_Students(Class_Module_Day_Student entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Class_Module_StudentExams(Class_Module_StudentExam entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Class_Module_StudentExams(Class_Module_StudentExam entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Prizes(Prize entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Prizes(Prize entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Student_AcademicStatus(Student_AcademicStatus entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Student_AcademicStatus(Student_AcademicStatus entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Student_ClassHistories(Student_ClassHistory entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Student_ClassHistories(Student_ClassHistory entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Student_FeePlans(Student_FeePlan entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Student_FeePlans(Student_FeePlan entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_AcademicStatus")]
	public partial class Student_AcademicStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Student_Id;
		
		private int _Student_Status;
		
		private System.DateTime _Student_Status_Date;
		
		private string _Student_Status_Note;
		
		private System.Nullable<System.DateTime> _Student_FU_Date;
		
		private long _Student_FU_Amount;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    partial void OnStudent_StatusChanging(int value);
    partial void OnStudent_StatusChanged();
    partial void OnStudent_Status_DateChanging(System.DateTime value);
    partial void OnStudent_Status_DateChanged();
    partial void OnStudent_Status_NoteChanging(string value);
    partial void OnStudent_Status_NoteChanged();
    partial void OnStudent_FU_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnStudent_FU_DateChanged();
    partial void OnStudent_FU_AmountChanging(long value);
    partial void OnStudent_FU_AmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Student_AcademicStatus()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int NOT NULL")]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Status", DbType="Int NOT NULL")]
		public int Student_Status
		{
			get
			{
				return this._Student_Status;
			}
			set
			{
				if ((this._Student_Status != value))
				{
					this.OnStudent_StatusChanging(value);
					this.SendPropertyChanging();
					this._Student_Status = value;
					this.SendPropertyChanged("Student_Status");
					this.OnStudent_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Status_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Student_Status_Date
		{
			get
			{
				return this._Student_Status_Date;
			}
			set
			{
				if ((this._Student_Status_Date != value))
				{
					this.OnStudent_Status_DateChanging(value);
					this.SendPropertyChanging();
					this._Student_Status_Date = value;
					this.SendPropertyChanged("Student_Status_Date");
					this.OnStudent_Status_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Status_Note", DbType="NVarChar(MAX)")]
		public string Student_Status_Note
		{
			get
			{
				return this._Student_Status_Note;
			}
			set
			{
				if ((this._Student_Status_Note != value))
				{
					this.OnStudent_Status_NoteChanging(value);
					this.SendPropertyChanging();
					this._Student_Status_Note = value;
					this.SendPropertyChanged("Student_Status_Note");
					this.OnStudent_Status_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_FU_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Student_FU_Date
		{
			get
			{
				return this._Student_FU_Date;
			}
			set
			{
				if ((this._Student_FU_Date != value))
				{
					this.OnStudent_FU_DateChanging(value);
					this.SendPropertyChanging();
					this._Student_FU_Date = value;
					this.SendPropertyChanged("Student_FU_Date");
					this.OnStudent_FU_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_FU_Amount", DbType="BigInt NOT NULL")]
		public long Student_FU_Amount
		{
			get
			{
				return this._Student_FU_Amount;
			}
			set
			{
				if ((this._Student_FU_Amount != value))
				{
					this.OnStudent_FU_AmountChanging(value);
					this.SendPropertyChanging();
					this._Student_FU_Amount = value;
					this.SendPropertyChanged("Student_FU_Amount");
					this.OnStudent_FU_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Student_AcademicStatus", Storage="_Student", ThisKey="Student_Id", OtherKey="Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Student_AcademicStatus.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Student_AcademicStatus.Add(this);
						this._Student_Id = value.Id;
					}
					else
					{
						this._Student_Id = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_ClassHistory")]
	public partial class Student_ClassHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Student_Id;
		
		private int _Class_Id;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _ChangeReason;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    partial void OnClass_IdChanging(int value);
    partial void OnClass_IdChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnChangeReasonChanging(string value);
    partial void OnChangeReasonChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public Student_ClassHistory()
		{
			this._Class = default(EntityRef<Class>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int NOT NULL")]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_Id", DbType="Int NOT NULL")]
		public int Class_Id
		{
			get
			{
				return this._Class_Id;
			}
			set
			{
				if ((this._Class_Id != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClass_IdChanging(value);
					this.SendPropertyChanging();
					this._Class_Id = value;
					this.SendPropertyChanged("Class_Id");
					this.OnClass_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeReason", DbType="NVarChar(MAX)")]
		public string ChangeReason
		{
			get
			{
				return this._ChangeReason;
			}
			set
			{
				if ((this._ChangeReason != value))
				{
					this.OnChangeReasonChanging(value);
					this.SendPropertyChanging();
					this._ChangeReason = value;
					this.SendPropertyChanged("ChangeReason");
					this.OnChangeReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Student_ClassHistory", Storage="_Class", ThisKey="Class_Id", OtherKey="Id", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.Student_ClassHistories.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.Student_ClassHistories.Add(this);
						this._Class_Id = value.Id;
					}
					else
					{
						this._Class_Id = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Student_ClassHistory", Storage="_Student", ThisKey="Student_Id", OtherKey="Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Student_ClassHistories.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Student_ClassHistories.Add(this);
						this._Student_Id = value.Id;
					}
					else
					{
						this._Student_Id = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_FeePlan")]
	public partial class Student_FeePlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Student_Id;
		
		private int _FeePlan_Id;
		
		private int _Nominal_Course_Fee;
		
		private int _Discount_Amount;
		
		private int _Actual_Course_Fee;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _FeePlan_StartDate;
		
		private EntitySet<Student_FeePlan_Installment> _Student_FeePlan_Installments;
		
		private EntityRef<FeePlan> _FeePlan;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    partial void OnFeePlan_IdChanging(int value);
    partial void OnFeePlan_IdChanged();
    partial void OnNominal_Course_FeeChanging(int value);
    partial void OnNominal_Course_FeeChanged();
    partial void OnDiscount_AmountChanging(int value);
    partial void OnDiscount_AmountChanged();
    partial void OnActual_Course_FeeChanging(int value);
    partial void OnActual_Course_FeeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnFeePlan_StartDateChanging(System.DateTime value);
    partial void OnFeePlan_StartDateChanged();
    #endregion
		
		public Student_FeePlan()
		{
			this._Student_FeePlan_Installments = new EntitySet<Student_FeePlan_Installment>(new Action<Student_FeePlan_Installment>(this.attach_Student_FeePlan_Installments), new Action<Student_FeePlan_Installment>(this.detach_Student_FeePlan_Installments));
			this._FeePlan = default(EntityRef<FeePlan>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int NOT NULL")]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_Id", DbType="Int NOT NULL")]
		public int FeePlan_Id
		{
			get
			{
				return this._FeePlan_Id;
			}
			set
			{
				if ((this._FeePlan_Id != value))
				{
					if (this._FeePlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeePlan_IdChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_Id = value;
					this.SendPropertyChanged("FeePlan_Id");
					this.OnFeePlan_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nominal_Course_Fee", DbType="Int NOT NULL")]
		public int Nominal_Course_Fee
		{
			get
			{
				return this._Nominal_Course_Fee;
			}
			set
			{
				if ((this._Nominal_Course_Fee != value))
				{
					this.OnNominal_Course_FeeChanging(value);
					this.SendPropertyChanging();
					this._Nominal_Course_Fee = value;
					this.SendPropertyChanged("Nominal_Course_Fee");
					this.OnNominal_Course_FeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Amount", DbType="Int NOT NULL")]
		public int Discount_Amount
		{
			get
			{
				return this._Discount_Amount;
			}
			set
			{
				if ((this._Discount_Amount != value))
				{
					this.OnDiscount_AmountChanging(value);
					this.SendPropertyChanging();
					this._Discount_Amount = value;
					this.SendPropertyChanged("Discount_Amount");
					this.OnDiscount_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual_Course_Fee", DbType="Int NOT NULL")]
		public int Actual_Course_Fee
		{
			get
			{
				return this._Actual_Course_Fee;
			}
			set
			{
				if ((this._Actual_Course_Fee != value))
				{
					this.OnActual_Course_FeeChanging(value);
					this.SendPropertyChanging();
					this._Actual_Course_Fee = value;
					this.SendPropertyChanged("Actual_Course_Fee");
					this.OnActual_Course_FeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime FeePlan_StartDate
		{
			get
			{
				return this._FeePlan_StartDate;
			}
			set
			{
				if ((this._FeePlan_StartDate != value))
				{
					this.OnFeePlan_StartDateChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_StartDate = value;
					this.SendPropertyChanged("FeePlan_StartDate");
					this.OnFeePlan_StartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_FeePlan_Student_FeePlan_Installment", Storage="_Student_FeePlan_Installments", ThisKey="Id", OtherKey="Student_FeePlan_Id")]
		public EntitySet<Student_FeePlan_Installment> Student_FeePlan_Installments
		{
			get
			{
				return this._Student_FeePlan_Installments;
			}
			set
			{
				this._Student_FeePlan_Installments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePlan_Student_FeePlan", Storage="_FeePlan", ThisKey="FeePlan_Id", OtherKey="Id", IsForeignKey=true)]
		public FeePlan FeePlan
		{
			get
			{
				return this._FeePlan.Entity;
			}
			set
			{
				FeePlan previousValue = this._FeePlan.Entity;
				if (((previousValue != value) 
							|| (this._FeePlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeePlan.Entity = null;
						previousValue.Student_FeePlans.Remove(this);
					}
					this._FeePlan.Entity = value;
					if ((value != null))
					{
						value.Student_FeePlans.Add(this);
						this._FeePlan_Id = value.Id;
					}
					else
					{
						this._FeePlan_Id = default(int);
					}
					this.SendPropertyChanged("FeePlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Student_FeePlan", Storage="_Student", ThisKey="Student_Id", OtherKey="Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Student_FeePlans.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Student_FeePlans.Add(this);
						this._Student_Id = value.Id;
					}
					else
					{
						this._Student_Id = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Student_FeePlan_Installments(Student_FeePlan_Installment entity)
		{
			this.SendPropertyChanging();
			entity.Student_FeePlan = this;
		}
		
		private void detach_Student_FeePlan_Installments(Student_FeePlan_Installment entity)
		{
			this.SendPropertyChanging();
			entity.Student_FeePlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_FeePlan_Installment")]
	public partial class Student_FeePlan_Installment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Student_FeePlan_Id;
		
		private int _FeePlan_Detail_Id;
		
		private System.DateTime _Date_Planning;
		
		private System.Nullable<System.DateTime> _Date_Actual;
		
		private System.Nullable<System.DateTime> _Date_Extend;
		
		private int _Extend_Count;
		
		private int _Installment_Status;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private int _Amount_Planning;
		
		private int _Amount_Actual;
		
		private EntityRef<FeePlan_Detail> _FeePlan_Detail;
		
		private EntityRef<Student_FeePlan> _Student_FeePlan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudent_FeePlan_IdChanging(int value);
    partial void OnStudent_FeePlan_IdChanged();
    partial void OnFeePlan_Detail_IdChanging(int value);
    partial void OnFeePlan_Detail_IdChanged();
    partial void OnDate_PlanningChanging(System.DateTime value);
    partial void OnDate_PlanningChanged();
    partial void OnDate_ActualChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_ActualChanged();
    partial void OnDate_ExtendChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_ExtendChanged();
    partial void OnExtend_CountChanging(int value);
    partial void OnExtend_CountChanged();
    partial void OnInstallment_StatusChanging(int value);
    partial void OnInstallment_StatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnAmount_PlanningChanging(int value);
    partial void OnAmount_PlanningChanged();
    partial void OnAmount_ActualChanging(int value);
    partial void OnAmount_ActualChanged();
    #endregion
		
		public Student_FeePlan_Installment()
		{
			this._FeePlan_Detail = default(EntityRef<FeePlan_Detail>);
			this._Student_FeePlan = default(EntityRef<Student_FeePlan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_FeePlan_Id", DbType="Int NOT NULL")]
		public int Student_FeePlan_Id
		{
			get
			{
				return this._Student_FeePlan_Id;
			}
			set
			{
				if ((this._Student_FeePlan_Id != value))
				{
					if (this._Student_FeePlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_FeePlan_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_FeePlan_Id = value;
					this.SendPropertyChanged("Student_FeePlan_Id");
					this.OnStudent_FeePlan_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePlan_Detail_Id", DbType="Int NOT NULL")]
		public int FeePlan_Detail_Id
		{
			get
			{
				return this._FeePlan_Detail_Id;
			}
			set
			{
				if ((this._FeePlan_Detail_Id != value))
				{
					if (this._FeePlan_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeePlan_Detail_IdChanging(value);
					this.SendPropertyChanging();
					this._FeePlan_Detail_Id = value;
					this.SendPropertyChanged("FeePlan_Detail_Id");
					this.OnFeePlan_Detail_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Planning", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Planning
		{
			get
			{
				return this._Date_Planning;
			}
			set
			{
				if ((this._Date_Planning != value))
				{
					this.OnDate_PlanningChanging(value);
					this.SendPropertyChanging();
					this._Date_Planning = value;
					this.SendPropertyChanged("Date_Planning");
					this.OnDate_PlanningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Actual", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Actual
		{
			get
			{
				return this._Date_Actual;
			}
			set
			{
				if ((this._Date_Actual != value))
				{
					this.OnDate_ActualChanging(value);
					this.SendPropertyChanging();
					this._Date_Actual = value;
					this.SendPropertyChanged("Date_Actual");
					this.OnDate_ActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Extend", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Extend
		{
			get
			{
				return this._Date_Extend;
			}
			set
			{
				if ((this._Date_Extend != value))
				{
					this.OnDate_ExtendChanging(value);
					this.SendPropertyChanging();
					this._Date_Extend = value;
					this.SendPropertyChanged("Date_Extend");
					this.OnDate_ExtendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extend_Count", DbType="Int NOT NULL")]
		public int Extend_Count
		{
			get
			{
				return this._Extend_Count;
			}
			set
			{
				if ((this._Extend_Count != value))
				{
					this.OnExtend_CountChanging(value);
					this.SendPropertyChanging();
					this._Extend_Count = value;
					this.SendPropertyChanged("Extend_Count");
					this.OnExtend_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installment_Status", DbType="Int NOT NULL")]
		public int Installment_Status
		{
			get
			{
				return this._Installment_Status;
			}
			set
			{
				if ((this._Installment_Status != value))
				{
					this.OnInstallment_StatusChanging(value);
					this.SendPropertyChanging();
					this._Installment_Status = value;
					this.SendPropertyChanged("Installment_Status");
					this.OnInstallment_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount_Planning", DbType="Int NOT NULL")]
		public int Amount_Planning
		{
			get
			{
				return this._Amount_Planning;
			}
			set
			{
				if ((this._Amount_Planning != value))
				{
					this.OnAmount_PlanningChanging(value);
					this.SendPropertyChanging();
					this._Amount_Planning = value;
					this.SendPropertyChanged("Amount_Planning");
					this.OnAmount_PlanningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount_Actual", DbType="Int NOT NULL")]
		public int Amount_Actual
		{
			get
			{
				return this._Amount_Actual;
			}
			set
			{
				if ((this._Amount_Actual != value))
				{
					this.OnAmount_ActualChanging(value);
					this.SendPropertyChanging();
					this._Amount_Actual = value;
					this.SendPropertyChanged("Amount_Actual");
					this.OnAmount_ActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePlan_Detail_Student_FeePlan_Installment", Storage="_FeePlan_Detail", ThisKey="FeePlan_Detail_Id", OtherKey="Id", IsForeignKey=true)]
		public FeePlan_Detail FeePlan_Detail
		{
			get
			{
				return this._FeePlan_Detail.Entity;
			}
			set
			{
				FeePlan_Detail previousValue = this._FeePlan_Detail.Entity;
				if (((previousValue != value) 
							|| (this._FeePlan_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeePlan_Detail.Entity = null;
						previousValue.Student_FeePlan_Installments.Remove(this);
					}
					this._FeePlan_Detail.Entity = value;
					if ((value != null))
					{
						value.Student_FeePlan_Installments.Add(this);
						this._FeePlan_Detail_Id = value.Id;
					}
					else
					{
						this._FeePlan_Detail_Id = default(int);
					}
					this.SendPropertyChanged("FeePlan_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_FeePlan_Student_FeePlan_Installment", Storage="_Student_FeePlan", ThisKey="Student_FeePlan_Id", OtherKey="Id", IsForeignKey=true)]
		public Student_FeePlan Student_FeePlan
		{
			get
			{
				return this._Student_FeePlan.Entity;
			}
			set
			{
				Student_FeePlan previousValue = this._Student_FeePlan.Entity;
				if (((previousValue != value) 
							|| (this._Student_FeePlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student_FeePlan.Entity = null;
						previousValue.Student_FeePlan_Installments.Remove(this);
					}
					this._Student_FeePlan.Entity = value;
					if ((value != null))
					{
						value.Student_FeePlan_Installments.Add(this);
						this._Student_FeePlan_Id = value.Id;
					}
					else
					{
						this._Student_FeePlan_Id = default(int);
					}
					this.SendPropertyChanged("Student_FeePlan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Company")]
	public partial class User_Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _User_Id;
		
		private int _Company_Id;
		
		private System.DateTime _Created_Date;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<User_Profile> _User_Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnCompany_IdChanging(int value);
    partial void OnCompany_IdChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public User_Company()
		{
			this._Company = default(EntityRef<Company>);
			this._User_Profile = default(EntityRef<User_Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL")]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User_Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Id", DbType="Int NOT NULL")]
		public int Company_Id
		{
			get
			{
				return this._Company_Id;
			}
			set
			{
				if ((this._Company_Id != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompany_IdChanging(value);
					this.SendPropertyChanging();
					this._Company_Id = value;
					this.SendPropertyChanged("Company_Id");
					this.OnCompany_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_User_Company", Storage="_Company", ThisKey="Company_Id", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.User_Companies.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.User_Companies.Add(this);
						this._Company_Id = value.Id;
					}
					else
					{
						this._Company_Id = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile_User_Company", Storage="_User_Profile", ThisKey="User_Id", OtherKey="Id", IsForeignKey=true)]
		public User_Profile User_Profile
		{
			get
			{
				return this._User_Profile.Entity;
			}
			set
			{
				User_Profile previousValue = this._User_Profile.Entity;
				if (((previousValue != value) 
							|| (this._User_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Profile.Entity = null;
						previousValue.User_Companies.Remove(this);
					}
					this._User_Profile.Entity = value;
					if ((value != null))
					{
						value.User_Companies.Add(this);
						this._User_Id = value.Id;
					}
					else
					{
						this._User_Id = default(int);
					}
					this.SendPropertyChanged("User_Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Profile")]
	public partial class User_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _User_Profile_Name;
		
		private string _User_Profile_Phone;
		
		private string _User_Profile_Email;
		
		private int _User_Type_Id;
		
		private int _Role_Type_Id;
		
		private string _User_Profile_Avatar;
		
		private string _User_Profile_Facebook;
		
		private string _User_Profile_Address;
		
		private System.Nullable<int> _User_Profile_Gender;
		
		private System.Nullable<System.DateTime> _User_Profile_Birthday;
		
		private int _Status;
		
		private System.DateTime _Created_Date;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<User_Company> _User_Companies;

		private EntitySet<Timekeeper> _Timekeepers;

		private EntityRef<Role_Type> _Role_Type;
		
		private EntityRef<User_Type> _User_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUser_Profile_NameChanging(string value);
    partial void OnUser_Profile_NameChanged();
    partial void OnUser_Profile_PhoneChanging(string value);
    partial void OnUser_Profile_PhoneChanged();
    partial void OnUser_Profile_EmailChanging(string value);
    partial void OnUser_Profile_EmailChanged();
    partial void OnUser_Type_IdChanging(int value);
    partial void OnUser_Type_IdChanged();
    partial void OnRole_Type_IdChanging(int value);
    partial void OnRole_Type_IdChanged();
    partial void OnUser_Profile_AvatarChanging(string value);
    partial void OnUser_Profile_AvatarChanged();
    partial void OnUser_Profile_FacebookChanging(string value);
    partial void OnUser_Profile_FacebookChanged();
    partial void OnUser_Profile_AddressChanging(string value);
    partial void OnUser_Profile_AddressChanged();
    partial void OnUser_Profile_GenderChanging(System.Nullable<int> value);
    partial void OnUser_Profile_GenderChanged();
    partial void OnUser_Profile_BirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnUser_Profile_BirthdayChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public User_Profile()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._User_Companies = new EntitySet<User_Company>(new Action<User_Company>(this.attach_User_Companies), new Action<User_Company>(this.detach_User_Companies));
			this._Timekeepers = new EntitySet<Timekeeper>(new Action<Timekeeper>(this.attach_Timekeepers), new Action<Timekeeper>(this.detach_Timekeepers));
			this._Role_Type = default(EntityRef<Role_Type>);
			this._User_Type = default(EntityRef<User_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Profile_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string User_Profile_Name
		{
			get
			{
				return this._User_Profile_Name;
			}
			set
			{
				if ((this._User_Profile_Name != value))
				{
					this.OnUser_Profile_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Profile_Name = value;
					this.SendPropertyChanged("User_Profile_Name");
					this.OnUser_Profile_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Profile_Phone", DbType="NVarChar(20)")]
		public string User_Profile_Phone
		{
			get
			{
				return this._User_Profile_Phone;
			}
			set
			{
				if ((this._User_Profile_Phone != value))
				{
					this.OnUser_Profile_PhoneChanging(value);
					this.SendPropertyChanging();
					this._User_Profile_Phone = value;
					this.SendPropertyChanged("User_Profile_Phone");
					this.OnUser_Profile_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Profile_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string User_Profile_Email
		{
			get
			{
				return this._User_Profile_Email;
			}
			set
			{
				if ((this._User_Profile_Email != value))
				{
					this.OnUser_Profile_EmailChanging(value);
					this.SendPropertyChanging();
					this._User_Profile_Email = value;
					this.SendPropertyChanged("User_Profile_Email");
					this.OnUser_Profile_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type_Id", DbType="Int NOT NULL")]
		public int User_Type_Id
		{
			get
			{
				return this._User_Type_Id;
			}
			set
			{
				if ((this._User_Type_Id != value))
				{
					if (this._User_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Type_Id = value;
					this.SendPropertyChanged("User_Type_Id");
					this.OnUser_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Type_Id", DbType="Int NOT NULL")]
		public int Role_Type_Id
		{
			get
			{
				return this._Role_Type_Id;
			}
			set
			{
				if ((this._Role_Type_Id != value))
				{
					if (this._Role_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Role_Type_Id = value;
					this.SendPropertyChanged("Role_Type_Id");
					this.OnRole_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Profile_Avatar", DbType="NVarChar(100)")]
		public string User_Profile_Avatar
		{
			get
			{
				return this._User_Profile_Avatar;
			}
			set
			{
				if ((this._User_Profile_Avatar != value))
				{
					this.OnUser_Profile_AvatarChanging(value);
					this.SendPropertyChanging();
					this._User_Profile_Avatar = value;
					this.SendPropertyChanged("User_Profile_Avatar");
					this.OnUser_Profile_AvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Profile_Facebook", DbType="NVarChar(50)")]
		public string User_Profile_Facebook
		{
			get
			{
				return this._User_Profile_Facebook;
			}
			set
			{
				if ((this._User_Profile_Facebook != value))
				{
					this.OnUser_Profile_FacebookChanging(value);
					this.SendPropertyChanging();
					this._User_Profile_Facebook = value;
					this.SendPropertyChanged("User_Profile_Facebook");
					this.OnUser_Profile_FacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Profile_Address", DbType="NVarChar(1000)")]
		public string User_Profile_Address
		{
			get
			{
				return this._User_Profile_Address;
			}
			set
			{
				if ((this._User_Profile_Address != value))
				{
					this.OnUser_Profile_AddressChanging(value);
					this.SendPropertyChanging();
					this._User_Profile_Address = value;
					this.SendPropertyChanged("User_Profile_Address");
					this.OnUser_Profile_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Profile_Gender", DbType="Int")]
		public System.Nullable<int> User_Profile_Gender
		{
			get
			{
				return this._User_Profile_Gender;
			}
			set
			{
				if ((this._User_Profile_Gender != value))
				{
					this.OnUser_Profile_GenderChanging(value);
					this.SendPropertyChanging();
					this._User_Profile_Gender = value;
					this.SendPropertyChanged("User_Profile_Gender");
					this.OnUser_Profile_GenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Profile_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> User_Profile_Birthday
		{
			get
			{
				return this._User_Profile_Birthday;
			}
			set
			{
				if ((this._User_Profile_Birthday != value))
				{
					this.OnUser_Profile_BirthdayChanging(value);
					this.SendPropertyChanging();
					this._User_Profile_Birthday = value;
					this.SendPropertyChanged("User_Profile_Birthday");
					this.OnUser_Profile_BirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile_Account", Storage="_Accounts", ThisKey="Id", OtherKey="User_Profile_Id")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile_User_Company", Storage="_User_Companies", ThisKey="Id", OtherKey="User_Id")]
		public EntitySet<User_Company> User_Companies
		{
			get
			{
				return this._User_Companies;
			}
			set
			{
				this._User_Companies.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "User_Profile_Timekeeper", Storage = "_Timekeepers", ThisKey = "Id", OtherKey = "User_Id")]
		public EntitySet<Timekeeper> Timekeepers
		{
			get
			{
				return this._Timekeepers;
			}
			set
			{
				this._Timekeepers.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Type_User_Profile", Storage="_Role_Type", ThisKey="Role_Type_Id", OtherKey="Id", IsForeignKey=true)]
		public Role_Type Role_Type
		{
			get
			{
				return this._Role_Type.Entity;
			}
			set
			{
				Role_Type previousValue = this._Role_Type.Entity;
				if (((previousValue != value) 
							|| (this._Role_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role_Type.Entity = null;
						previousValue.User_Profiles.Remove(this);
					}
					this._Role_Type.Entity = value;
					if ((value != null))
					{
						value.User_Profiles.Add(this);
						this._Role_Type_Id = value.Id;
					}
					else
					{
						this._Role_Type_Id = default(int);
					}
					this.SendPropertyChanged("Role_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Type_User_Profile", Storage="_User_Type", ThisKey="User_Type_Id", OtherKey="Id", IsForeignKey=true)]
		public User_Type User_Type
		{
			get
			{
				return this._User_Type.Entity;
			}
			set
			{
				User_Type previousValue = this._User_Type.Entity;
				if (((previousValue != value) 
							|| (this._User_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Type.Entity = null;
						previousValue.User_Profiles.Remove(this);
					}
					this._User_Type.Entity = value;
					if ((value != null))
					{
						value.User_Profiles.Add(this);
						this._User_Type_Id = value.Id;
					}
					else
					{
						this._User_Type_Id = default(int);
					}
					this.SendPropertyChanged("User_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.User_Profile = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.User_Profile = null;
		}
		
		private void attach_User_Companies(User_Company entity)
		{
			this.SendPropertyChanging();
			entity.User_Profile = this;
		}
		
		private void detach_User_Companies(User_Company entity)
		{
			this.SendPropertyChanging();
			entity.User_Profile = null;
		}
		private void attach_Timekeepers(Timekeeper entity)
		{
			this.SendPropertyChanging();
			entity.User_Profile = this;
		}

		private void detach_Timekeepers(Timekeeper entity)
		{
			this.SendPropertyChanging();
			entity.User_Profile = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Timekeeper")]
	public partial class Timekeeper : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Id;

		private int _User_Id;

		private string _Photo;

		private string _IP;

		private string _IP_Modem;

		private string _Location;

		private System.DateTime _Checkin_Date;

		private int _Status;

		private System.DateTime _Created_Date;

		private int _InOrOut;

		private int _Company_Id;

		private EntityRef<User_Profile> _User_Profile;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIdChanging(int value);
		partial void OnIdChanged();
		partial void OnUser_IdChanging(int value);
		partial void OnUser_IdChanged();
		partial void OnPhotoChanging(string value);
		partial void OnPhotoChanged();
		partial void OnIPChanging(string value);
		partial void OnIPChanged();
		partial void OnIP_ModemChanging(string value);
		partial void OnIP_ModemChanged();
		partial void OnLocationChanging(string value);
		partial void OnLocationChanged();
		partial void OnCheckin_DateChanging(System.DateTime value);
		partial void OnCheckin_DateChanged();
		partial void OnStatusChanging(int value);
		partial void OnStatusChanged();
		partial void OnCreated_DateChanging(System.DateTime value);
		partial void OnCreated_DateChanged();
		partial void OnInOrOutChanging(int value);
		partial void OnInOrOutChanged();
		partial void OnCompany_IdChanging(int value);
		partial void OnCompany_IdChanged();
		#endregion

		public Timekeeper()
		{
			this._User_Profile = default(EntityRef<User_Profile>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_User_Id", DbType = "Int NOT NULL")]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User_Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Photo", DbType = "NVarChar(255)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IP", DbType = "VarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IP_Modem", DbType = "NVarChar(MAX)")]
		public string IP_Modem
		{
			get
			{
				return this._IP_Modem;
			}
			set
			{
				if ((this._IP_Modem != value))
				{
					this.OnIP_ModemChanging(value);
					this.SendPropertyChanging();
					this._IP_Modem = value;
					this.SendPropertyChanged("IP_Modem");
					this.OnIP_ModemChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Location", DbType = "NVarChar(MAX)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Checkin_Date", DbType = "DateTime NOT NULL")]
		public System.DateTime Checkin_Date
		{
			get
			{
				return this._Checkin_Date;
			}
			set
			{
				if ((this._Checkin_Date != value))
				{
					this.OnCheckin_DateChanging(value);
					this.SendPropertyChanging();
					this._Checkin_Date = value;
					this.SendPropertyChanged("Checkin_Date");
					this.OnCheckin_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
		public override int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Created_Date", DbType = "DateTime NOT NULL")]
		public override System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InOrOut", DbType = "Int NOT NULL")]
		public int InOrOut
		{
			get
			{
				return this._InOrOut;
			}
			set
			{
				if ((this._InOrOut != value))
				{
					this.OnInOrOutChanging(value);
					this.SendPropertyChanging();
					this._InOrOut = value;
					this.SendPropertyChanged("InOrOut");
					this.OnInOrOutChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Company_Id", DbType = "Int NOT NULL")]
		public int Company_Id
		{
			get
			{
				return this._Company_Id;
			}
			set
			{
				if ((this._Company_Id != value))
				{
					this.OnCompany_IdChanging(value);
					this.SendPropertyChanging();
					this._Company_Id = value;
					this.SendPropertyChanged("Company_Id");
					this.OnCompany_IdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "User_Profile_Timekeeper", Storage = "_User_Profile", ThisKey = "User_Id", OtherKey = "Id", IsForeignKey = true)]
		public User_Profile User_Profile
		{
			get
			{
				return this._User_Profile.Entity;
			}
			set
			{
				User_Profile previousValue = this._User_Profile.Entity;
				if (((previousValue != value)
							|| (this._User_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Profile.Entity = null;
						previousValue.Timekeepers.Remove(this);
					}
					this._User_Profile.Entity = value;
					if ((value != null))
					{
						value.Timekeepers.Add(this);
						this._User_Id = value.Id;
					}
					else
					{
						this._User_Id = default(int);
					}
					this.SendPropertyChanged("User_Profile");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
